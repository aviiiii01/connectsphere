{"version":3,"sources":["components/layout/spinner.gif","actions/alert.js","actions/types.js","utils/setAuthToken.js","actions/auth.js","components/layout/Navbar.js","components/layout/Landing.js","components/auth/Register.js","components/auth/Login.js","components/layout/Alert.js","components/dashboard/DashboardActions.js","components/layout/Spinner.js","actions/profile.js","components/dashboard/Experience.js","components/dashboard/Education.js","components/dashboard/Dashboard.js","components/profile-forms/CreateProfile.js","components/profile-forms/EditProfile.js","components/profile-forms/AddExperience.js","components/profile-forms/AddEducation.js","components/profiles/ProfileItem.js","components/profiles/Profiles.js","components/profile/ProfileTop.js","components/profile/ProfileAbout.js","components/profile/ProfileExperience.js","components/profile/ProfileEducation.js","components/profile/ProfileGithub.js","components/profile/Profile.js","components/posts/PostItem.js","actions/post.js","components/posts/PostForm.js","components/posts/Posts.js","components/post/CommentForm.js","components/post/CommentItem.js","components/post/Post.js","components/layout/NotFound.js","components/routing/PrivateRoute.js","components/routing/Routes.js","reducers/alert.js","reducers/auth.js","reducers/profile.js","reducers/post.js","reducers/index.js","store.js","App.js","index.js"],"names":["module","exports","setAlert","msg","alertType","timeout","dispatch","id","uuidv4","type","payload","setTimeout","setAuthToken","token","axios","defaults","headers","common","loadUser","a","localStorage","get","res","data","connect","state","auth","logout","isAuthenticated","loading","authLinks","to","className","onClick","guestLinks","href","register","name","email","password","config","body","JSON","stringify","post","errors","response","forEach","error","useState","password2","formData","setFormData","onChange","e","target","value","onSubmit","preventDefault","placeholder","required","minLength","login","alerts","alert","length","map","key","DashboardActions","src","spinner","style","width","margin","display","alt","getCurrentProfile","statusText","status","createProfile","history","edit","push","deleteExperience","delete","experience","Array","isArray","experiences","exp","_id","company","title","format","from","deleteEducation","education","educations","edu","school","degree","moment","utc","profile","deleteAccount","window","confirm","user","useEffect","Spinner","marginRight","initialState","website","location","skills","githubusername","bio","twitter","facebook","linkedin","youtube","instagram","usegithubavatar","withRouter","displaySocialInputs","toggleSocialInputs","profileData","join","checked","htmlFor","social","color","addExperience","put","current","description","toDateDisabled","toggleDisabled","disabled","cols","rows","addEducation","fieldofstudy","ProfileItem","avatar","slice","skill","index","getProfiles","profiles","ProfileTop","rel","ProfileAbout","trim","split","ProfileExperience","ProfileEducation","repos","getGithubRepos","username","repo","html_url","stargazers_count","watchers_count","forks_count","getProfileById","userId","match","nullProfile","params","PostItem","addLike","removeLike","deletePost","text","likes","comments","date","showActions","wordBreak","defaultProps","addPost","FormData","setText","getPosts","posts","addComment","postId","deleteComment","commentId","comment","getPost","NotFound","props","Component","component","rest","render","Routes","exact","path","Register","Login","Profiles","Profile","Dashboard","CreateProfile","EditProfile","AddExperience","AddEducation","Posts","Post","getItem","combineReducers","action","filter","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","Landing","ReactDOM","StrictMode","document","getElementById"],"mappings":"sHAAAA,EAAOC,QAAU,IAA0B,qC,0MCG9BC,EAAW,SAACC,EAAKC,GAAN,IAAiBC,EAAjB,uDAA2B,IAA3B,OAAoC,SAACC,GAC3D,IAAMC,EAAKC,cACXF,EAAS,CACPG,KCNqB,YDOrBC,QAAS,CAAEP,MAAKC,YAAWG,QAG7BI,YAAW,kBAAML,EAAS,CAAEG,KCTF,eDSsBC,QAASH,MAAOF,KEAnDO,EARM,SAAAC,GACdA,EACCC,IAAMC,SAASC,QAAQC,OAAO,gBAAkBJ,SAEzCC,IAAMC,SAASC,QAAQC,OAAO,iBCShCC,EAAW,yDAAM,WAAMZ,GAAN,eAAAa,EAAA,6DACvBC,aAAaP,OACZD,EAAaQ,aAAaP,OAFJ,kBAMJC,IAAMO,IAAI,aANN,OAMhBC,EANgB,OAQtBhB,EAAS,CACLG,KFpBe,cEqBfC,QAASY,EAAIC,OAVK,gDAatBjB,EAAS,CACLG,KFxBc,eEUI,yDAAN,uDCwDTe,eAJS,SAAAC,GAAK,MAAK,CAChCC,KAAMD,EAAMC,QAG0B,CAACC,ODwBnB,kBAAM,SAAArB,GACxBA,EAAS,CACPG,KFlFuB,kBEoFzBH,EAAS,CACLG,KF5Fc,cG+DPe,EAjEA,SAAC,GAAoD,IAAD,IAAjDE,KAAQE,EAAyC,EAAzCA,gBAAiBC,EAAwB,EAAxBA,QAAWF,EAAa,EAAbA,OAC9CG,EACJ,4BACE,4BACE,kBAAC,IAAD,CAAMC,GAAG,aACP,uBAAGC,UAAU,uBAA0B,IACvC,0BAAMA,UAAU,WAAhB,gBAGJ,4BACE,kBAAC,IAAD,CAAMD,GAAG,UACP,uBAAGC,UAAU,mBAAsB,IACnC,0BAAMA,UAAU,WAAhB,WAGJ,4BACE,kBAAC,IAAD,CAAMD,GAAG,cACP,uBAAGC,UAAU,gBAAiB,IAC9B,0BAAMA,UAAU,WAAhB,eAGJ,4BACE,kBAAC,IAAD,CAAMC,QAASN,EAAQI,GAAG,KACxB,uBAAGC,UAAU,wBAAyB,IACtC,0BAAMA,UAAU,WAAhB,aAMFE,EACJ,4BACE,4BACE,kBAAC,IAAD,CAAMH,GAAG,aAAT,eAEF,4BACE,uBAAGI,KAAK,aAAR,aAEF,4BACE,uBAAGA,KAAK,UAAR,WAKN,OACE,yBAAKH,UAAU,kBACb,4BACE,uBAAGG,KAAK,KACN,uBAAGH,UAAU,gBADf,oBAIHH,GAAY,kBAAC,WAAD,KAAYD,EAAkBE,EAAYI,OCjB5CV,eAJS,SAAAC,GAAK,MAAK,CAChCG,gBAAiBH,EAAMC,KAAKE,mBAGfJ,EAnCC,SAAC,GACf,OADqC,EAArBI,gBAEP,kBAAC,IAAD,CAAUG,GAAG,eAGlB,6BAASC,UAAU,WACjB,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,iBACb,wBAAIA,UAAU,WAAd,uBACA,uBAAGA,UAAU,QAAb,wFAIA,yBAAKA,UAAU,WACb,kBAAC,IAAD,CAAMD,GAAG,YAAYC,UAAU,mBAA/B,WAGA,kBAAC,IAAD,CAAMD,GAAG,SAASC,UAAU,iBAA5B,gB,qBCmFCR,eAJS,SAACC,GAAD,MAAY,CAClCG,gBAAiBH,EAAMC,KAAKE,mBAGU,CAAE1B,WAAUkC,SHtE5B,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,SAAhB,8CAA+B,WAAMjC,GAAN,qBAAAa,EAAA,6DAC7CqB,EAAS,CACXxB,QAAS,CACL,eAAgB,qBAIlByB,EAAOC,KAAKC,UAAU,CAAEN,OAAMC,QAAOC,aAPQ,kBAU7BzB,IAAM8B,KAAK,aAAcH,EAAMD,GAVF,OAUzClB,EAVyC,OAY/ChB,EAAS,CACLG,KF9CoB,mBE+CpBC,QAASY,EAAIC,OAGjBjB,EAASY,KAjBsC,mDAmBzC2B,EAAS,KAAIC,SAASvB,KAAKsB,SAE7BA,EAAOE,SAAQ,SAAAC,GAAK,OAAI1C,EAASJ,EAAS8C,EAAM7C,IAAK,cAEzDG,EAAS,CACLG,KFxDiB,kBEgC0B,0DAA/B,wDGsETe,EAhGE,SAAC,GAA6C,IAA3CtB,EAA0C,EAA1CA,SAAUkC,EAAgC,EAAhCA,SAAUR,EAAsB,EAAtBA,gBAAsB,EACxBqB,mBAAS,CACvCZ,KAAK,GACLC,MAAM,GACNC,SAAS,GACTW,UAAU,KAL4C,mBAClDC,EADkD,KACxCC,EADwC,KAQlDf,EAAqCc,EAArCd,KAAMC,EAA+Ba,EAA/Bb,MAAOC,EAAwBY,EAAxBZ,SAAUW,EAAcC,EAAdD,UAEzBG,EAAW,SAACC,GAAD,OACfF,EAAY,eAAKD,EAAN,eAAiBG,EAAEC,OAAOlB,KAAOiB,EAAEC,OAAOC,UAEjDC,EAAQ,uCAAG,WAAMH,GAAN,SAAAnC,EAAA,sDACbmC,EAAEI,iBACCnB,IAAaW,EACZhD,EAAS,sBAAuB,UAEhCkC,EAAS,CAAEC,OAAMC,QAAOC,aALf,2CAAH,sDASd,OAAGX,EACM,kBAAC,IAAD,CAAUG,GAAG,eAIpB,oCACE,wBAAIC,UAAU,sBAAd,WACA,uBAAGA,UAAU,QACX,uBAAGA,UAAU,gBADf,wBAGA,0BAAMA,UAAU,OAAOyB,SAAU,SAACH,GAAD,OAAOG,EAASH,KAC/C,yBAAKtB,UAAU,cACb,2BACEvB,KAAK,OACLkD,YAAY,OACZtB,KAAK,OACLmB,MAAOnB,EACPgB,SAAU,SAACC,GAAD,OAAOD,EAASC,IAC1BM,UAAQ,KAGZ,yBAAK5B,UAAU,cACb,2BACEvB,KAAK,QACLkD,YAAY,gBACZtB,KAAK,QACLmB,MAAOlB,EACPe,SAAU,SAACC,GAAD,OAAOD,EAASC,IAC1BM,UAAQ,IAEV,2BAAO5B,UAAU,aAAjB,iFAKF,yBAAKA,UAAU,cACb,2BACEvB,KAAK,WACLkD,YAAY,WACZtB,KAAK,WACLwB,UAAU,IACVL,MAAOjB,EACPc,SAAU,SAACC,GAAD,OAAOD,EAASC,OAG9B,yBAAKtB,UAAU,cACb,2BACEvB,KAAK,WACLkD,YAAY,mBACZtB,KAAK,YACLwB,UAAU,IACVL,MAAON,EACPG,SAAU,SAACC,GAAD,OAAOD,EAASC,OAG9B,2BAAO7C,KAAK,SAASuB,UAAU,kBAAkBwB,MAAM,cAEzD,uBAAGxB,UAAU,QAAb,4BAC2B,kBAAC,IAAD,CAAMD,GAAG,UAAT,gBClBpBP,eAJS,SAACC,GAAD,MAAY,CAClCG,gBAAiBH,EAAMC,KAAKE,mBAGU,CAAEkC,MJNrB,SAAExB,EAAOC,GAAT,8CAAuB,WAAMjC,GAAN,qBAAAa,EAAA,6DAClCqB,EAAS,CACXxB,QAAS,CACL,eAAgB,qBAIlByB,EAAOC,KAAKC,UAAU,CAAEL,QAAOC,aAPG,kBAUlBzB,IAAM8B,KAAK,YAAaH,EAAMD,GAVZ,OAU9BlB,EAV8B,OAYpChB,EAAS,CACLG,KFxEiB,gBEyEjBC,QAASY,EAAIC,OAGjBjB,EAASY,KAjB2B,mDAmB9B2B,EAAS,KAAIC,SAASvB,KAAKsB,SAE7BA,EAAOE,SAAQ,SAAAC,GAAK,OAAI1C,EAASJ,EAAS8C,EAAM7C,IAAK,cAEzDG,EAAS,CACLG,KFlFc,eE0DkB,0DAAvB,wDIMNe,EAjED,SAAC,GAAgC,IAA9BsC,EAA6B,EAA7BA,MAAOlC,EAAsB,EAAtBA,gBAAsB,EACVqB,mBAAS,CACvCX,MAAO,GACPC,SAAU,KAH8B,mBACnCY,EADmC,KACzBC,EADyB,KAMlCd,EAAoBa,EAApBb,MAAOC,EAAaY,EAAbZ,SAETc,EAAW,SAACC,GAAD,OACbF,EAAY,eAAKD,EAAN,eAAiBG,EAAEC,OAAOlB,KAAOiB,EAAEC,OAAOC,UAEnDC,EAAQ,uCAAG,WAAMH,GAAN,SAAAnC,EAAA,sDACbmC,EAAEI,iBACDI,EAAMxB,EAAOC,GAFD,2CAAH,sDAMd,OAAGX,EACM,kBAAC,IAAD,CAAUG,GAAG,eAIpB,oCACE,wBAAIC,UAAU,sBAAd,WACA,uBAAGA,UAAU,QACX,uBAAGA,UAAU,gBADf,2BAGA,0BAAMA,UAAU,OAAOyB,SAAU,SAACH,GAAD,OAAOG,EAASH,KAC/C,yBAAKtB,UAAU,cACb,2BACEvB,KAAK,QACLkD,YAAY,gBACZtB,KAAK,QACLmB,MAAOlB,EACPe,SAAU,SAACC,GAAD,OAAOD,EAASC,IAC1BM,UAAQ,KAGZ,yBAAK5B,UAAU,cACb,2BACEvB,KAAK,WACLkD,YAAY,WACZtB,KAAK,WACLmB,MAAOjB,EACPc,SAAU,SAACC,GAAD,OAAOD,EAASC,OAG9B,2BAAO7C,KAAK,SAASuB,UAAU,kBAAkBwB,MAAM,WAEzD,uBAAGxB,UAAU,QAAb,0BACyB,kBAAC,IAAD,CAAMD,GAAG,aAAT,gBCnClBP,eAJS,SAACC,GAAD,MAAY,CAClCsC,OAAQtC,EAAMuC,SAGDxC,EAjBD,SAAC,GAAD,IAAGuC,EAAH,EAAGA,OAAH,OACD,OAAXA,GACAA,EAAOE,OAAS,GAChBF,EAAOG,KAAI,SAACF,GAAD,OACT,yBAAKG,IAAKH,EAAMzD,GAAIyB,UAAS,sBAAiBgC,EAAM5D,YACjD4D,EAAM7D,WCUEiE,EAhBU,WACvB,OACE,yBAAKpC,UAAU,gBACb,kBAAC,IAAD,CAAMD,GAAG,gBAAgBC,UAAU,iBACjC,uBAAGA,UAAU,oCADf,iBAGA,kBAAC,IAAD,CAAMD,GAAG,kBAAkBC,UAAU,iBACnC,uBAAGA,UAAU,kCADf,mBAGA,kBAAC,IAAD,CAAMD,GAAG,iBAAiBC,UAAU,iBAClC,uBAAGA,UAAU,uCADf,oB,iBCTS,oBACb,kBAAC,WAAD,KACE,yBACEqC,IAAKC,IACLC,MAAO,CAAEC,MAAO,QAASC,OAAQ,OAAQC,QAAS,SAClDC,IAAI,iB,iBCOGC,EAAoB,yDAAM,WAAOtE,GAAP,eAAAa,EAAA,+EAEjBL,IAAMO,IAAI,mBAFO,OAE7BC,EAF6B,OAInChB,EAAS,CACPG,KVXqB,cUYrBC,QAASY,EAAIC,OANoB,gDASnCjB,EAAS,CACPG,KVXuB,gBUYvBC,QAAS,CAAEP,IAAK,KAAI2C,SAAS+B,WAAYC,OAAQ,KAAIhC,SAASgC,UAX7B,yDAAN,uDAqEpBC,EAAgB,SAAC5B,EAAU6B,GAAX,IAAoBC,EAApB,sGAAqC,WAChE3E,GADgE,mBAAAa,EAAA,sEAIxDqB,EAAS,CACbxB,QAAS,CACP,eAAgB,qBAN0C,SAU5CF,IAAM8B,KAAK,eAAgBO,EAAUX,GAVO,OAUxDlB,EAVwD,OAY9DhB,EAAS,CACPG,KVxFqB,cUyFrBC,QAASY,EAAIC,OAGfjB,EAASJ,EAAS+E,EAAO,kBAAoB,kBAAmB,YAE3DA,GACHD,EAAQE,KAAK,cApB+C,mDAuBxDrC,EAAS,KAAIC,SAASvB,KAAKsB,SAG/BA,EAAOE,SAAQ,SAACC,GAAD,OAAW1C,EAASJ,EAAS8C,EAAM7C,IAAK,cAGzDG,EAAS,CACPG,KVpGuB,gBUqGvBC,QAAS,CAAEP,IAAK,KAAI2C,SAAS+B,WAAYC,OAAQ,KAAIhC,SAASgC,UA/BF,0DAArC,uDCrBdtD,cAAQ,KAAM,CAAE2D,iBD4HC,SAAC5E,GAAD,8CAAQ,WAAOD,GAAP,eAAAa,EAAA,+EAElBL,IAAMsE,OAAN,kCAAwC7E,IAFtB,OAE9Be,EAF8B,OAIpChB,EAAS,CACPG,KVnLwB,iBUoLxBC,QAASY,EAAIC,OAGfjB,EAASJ,EAAS,qBAAsB,YATJ,gDAWpCI,EAAS,CACPG,KVzLuB,gBU0LvBC,QAAS,CAAEP,IAAK,KAAI2C,SAAS+B,WAAYC,OAAQ,KAAIhC,SAASgC,UAb5B,yDAAR,wDC5HjBtD,EAzDI,SAAC,GAAsC,IAApC6D,EAAmC,EAAnCA,WAAYF,EAAuB,EAAvBA,iBAEhC,IAAKG,MAAMC,QAAQF,IAAqC,IAAtBA,EAAWpB,OAC3C,OACE,kBAAC,WAAD,KACE,wBAAIjC,UAAU,QAAd,0BACA,oEAKN,IAAMwD,EAAcH,EAAWnB,KAAI,SAACuB,GAAD,OACjC,wBAAItB,IAAKsB,EAAIC,KACX,4BAAKD,EAAIE,SACT,wBAAI3D,UAAU,WAAWyD,EAAIG,OAC7B,4BACE,kBAAC,IAAD,CAAQC,OAAO,cAAcJ,EAAIK,MADnC,KACoD,IACtC,OAAXL,EAAI1D,GACH,OAEA,kBAAC,IAAD,CAAQ8D,OAAO,cAAcJ,EAAI1D,KAGrC,4BACE,4BACEE,QAAS,kBAAMkD,EAAiBM,EAAIC,MACpC1D,UAAU,kBAFZ,eAUN,OACE,kBAAC,WAAD,KACE,wBAAIA,UAAU,QAAd,0BACA,2BAAOA,UAAU,SACf,+BACE,4BACE,uCACA,wBAAIA,UAAU,WAAd,SACA,wBAAIA,UAAU,WAAd,SACA,wBAAIA,UAAU,WAAd,YAGJ,+BAAQwD,Q,iBCYDhE,cAAQ,KAAM,CAAEuE,gBF8IA,SAACxF,GAAD,8CAAQ,WAAOD,GAAP,eAAAa,EAAA,+EAEjBL,IAAMsE,OAAN,iCAAuC7E,IAFtB,OAE7Be,EAF6B,OAInChB,EAAS,CACPG,KVtMwB,iBUuMxBC,QAASY,EAAIC,OAGfjB,EAASJ,EAAS,oBAAqB,YATJ,gDAWnCI,EAAS,CACPG,KV5MuB,gBU6MvBC,QAAS,CAAEP,IAAK,KAAI2C,SAAS+B,WAAYC,OAAQ,KAAIhC,SAASgC,UAb7B,yDAAR,wDE9IhBtD,EAzDG,SAAC,GAAoC,IAAlCwE,EAAiC,EAAjCA,UAAWD,EAAsB,EAAtBA,gBAE9B,IAAKT,MAAMC,QAAQS,IAAmC,IAArBA,EAAU/B,OACzC,OACE,kBAAC,WAAD,KACE,wBAAIjC,UAAU,QAAd,yBACA,mEAKN,IAAMiE,EAAaD,EAAU9B,KAAI,SAACgC,GAAD,OAC/B,wBAAI/B,IAAK+B,EAAIR,KACX,4BAAKQ,EAAIC,QACT,wBAAInE,UAAU,WAAWkE,EAAIE,QAC7B,4BACE,kBAAC,IAAD,CAAQP,OAAO,cAAcQ,IAAOC,IAAIJ,EAAIJ,OAD9C,KACgE,IAClD,OAAXI,EAAInE,GACH,OAEA,kBAAC,IAAD,CAAQ8D,OAAO,cAAcQ,IAAOC,IAAIJ,EAAInE,MAGhD,4BACE,4BACEE,QAAS,kBAAM8D,EAAgBG,EAAIR,MACnC1D,UAAU,kBAFZ,eAUN,OACE,kBAAC,WAAD,KACE,wBAAIA,UAAU,QAAd,yBACA,2BAAOA,UAAU,SACf,+BACE,4BACE,sCACA,wBAAIA,UAAU,WAAd,UACA,wBAAIA,UAAU,WAAd,SACA,wBAAIA,UAAU,WAAd,YAGJ,+BAAQiE,QCWDzE,eALS,SAAAC,GAAK,MAAK,CAChCC,KAAMD,EAAMC,KACZ6E,QAAS9E,EAAM8E,WAKf,CACE3B,oBACA4B,cH6JyB,yDAAM,WAAOlG,GAAP,SAAAa,EAAA,0DAC7BsF,OAAOC,QAAQ,yCADc,0CAGvB5F,IAAMsE,OAAO,gBAHU,OAK7B9E,EAAS,CAAEG,KVvNY,kBUwNvBH,EAAS,CAAEG,KVvNc,oBUyNzBH,EAASJ,EAAS,8CARW,gDAU7BI,EAAS,CACPG,KV9NqB,gBU+NrBC,QAAS,CAAEP,IAAK,KAAI2C,SAAS+B,WAAYC,OAAQ,KAAIhC,SAASgC,UAZnC,yDAAN,wDGjKdtD,EAtDG,SAAC,GAKZ,IAJLoD,EAII,EAJJA,kBACA4B,EAGI,EAHJA,cACQG,EAEJ,EAFJjF,KAAQiF,KAEJ,IADJJ,QAAWA,EACP,EADOA,QAAS1E,EAChB,EADgBA,QAMpB,OAJA+E,qBAAU,WACRhC,MACC,CAACA,IAEG/C,GAAuB,OAAZ0E,EAChB,kBAACM,EAAD,MAEA,kBAAC,WAAD,KACE,wBAAI7E,UAAU,sBAAd,aACA,uBAAGA,UAAU,QACX,uBAAGA,UAAU,gBADf,YACyC2E,GAAQA,EAAKtE,MAEzC,OAAZkE,EACC,kBAAC,WAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAYlB,WAAYkB,EAAQlB,aAChC,kBAAC,EAAD,CAAWW,UAAWO,EAAQP,YAE9B,yBAAKhE,UAAU,QACb,4BAAQA,UAAU,iBAAiBC,QAAS,kBAAMuE,MAChD,uBAAGxE,UAAU,oBAAoBuC,MAAO,CAACuC,YAAY,SAAW,KADlE,wBAMJ,kBAAC,WAAD,KACE,qFACA,kBAAC,IAAD,CAAM/E,GAAG,kBAAkBC,UAAU,wBAArC,uBCrCJ+E,EAAe,CACnBpB,QAAS,GACTqB,QAAS,GACTC,SAAU,GACVnC,OAAQ,GACRoC,OAAQ,GACRC,eAAgB,GAChBC,IAAK,GACLC,QAAS,GACTC,SAAU,GACVC,SAAU,GACVC,QAAS,GACTC,UAAW,GACXC,iBAAiB,GA0PJlG,eAJS,SAACC,GAAD,MAAY,CAClC8E,QAAS9E,EAAM8E,WAGuB,CAAExB,gBAAeH,qBAA1CpD,CACbmG,aAxPoB,SAAC,GAKhB,IAAD,IAJJpB,QAAWA,EAIP,EAJOA,QAAS1E,EAIhB,EAJgBA,QACpBkD,EAGI,EAHJA,cACAH,EAEI,EAFJA,kBACAI,EACI,EADJA,QACI,EAC4B/B,mBAAS8D,GADrC,mBACG5D,EADH,KACaC,EADb,OAG8CH,oBAAS,GAHvD,mBAGG2E,EAHH,KAGwBC,EAHxB,KAKJjB,qBAAU,WAER,GADKL,GAAS3B,KACT/C,GAAW0E,EAAS,CACvB,IAAMuB,EAAW,eAAQf,GACzB,IAAK,IAAM5C,KAAOoC,EACZpC,KAAO2D,IAAaA,EAAY3D,GAAOoC,EAAQpC,IAEjDmB,MAAMC,QAAQuC,EAAYZ,UAC5BY,EAAYZ,OAASY,EAAYZ,OAAOa,KAAK,OAC/C3E,EAAY0E,MAEb,CAACjG,EAAS+C,EAAmB2B,IAhB5B,IAmBFZ,EAaExC,EAbFwC,QACAqB,EAYE7D,EAZF6D,QACAC,EAWE9D,EAXF8D,SACAnC,EAUE3B,EAVF2B,OACAoC,EASE/D,EATF+D,OACAC,EAQEhE,EARFgE,eACAC,EAOEjE,EAPFiE,IACAC,EAMElE,EANFkE,QACAC,EAKEnE,EALFmE,SACAC,EAIEpE,EAJFoE,SACAC,EAGErE,EAHFqE,QACAC,EAEEtE,EAFFsE,UACAC,EACEvE,EADFuE,gBAGIrE,EAAW,SAACC,GAChBF,EAAY,eAAKD,EAAN,eAAiBG,EAAEC,OAAOlB,KAAOiB,EAAEC,OAAOC,SAD/B,MAESF,EAAEC,OAA3BlB,EAFgB,EAEhBA,KAAMmB,EAFU,EAEVA,MAAOwE,EAFG,EAEHA,QACN,oBAAT3F,IAA4BmB,EAAQwE,GACxC5E,EAAY,eAAKD,EAAN,eAAiBd,EAAOmB,MAQrC,OACE,kBAAC,WAAD,KACE,wBAAIxB,UAAU,sBAAd,qBACA,uBAAGA,UAAU,QACX,uBAAGA,UAAU,gBADf,qCAGA,qDACA,0BAAMA,UAAU,OAAOyB,SAZV,SAACH,GAChBA,EAAEI,iBACFqB,EAAc5B,EAAU6B,IAASuB,KAW7B,yBAAKvE,UAAU,cACb,4BAAQK,KAAK,SAASmB,MAAOsB,EAAQzB,SAAUA,GAC7C,gEACA,4BAAQG,MAAM,aAAd,aACA,4BAAQA,MAAM,oBAAd,oBACA,4BAAQA,MAAM,oBAAd,oBACA,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,uBAAd,uBACA,4BAAQA,MAAM,cAAd,yBACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,SAAd,UAEF,2BAAOxB,UAAU,aAAjB,uDAIF,yBAAKA,UAAU,cACb,2BACEvB,KAAK,OACLkD,YAAY,UACZtB,KAAK,UACLmB,MAAOmC,EACPtC,SAAUA,IAEZ,2BAAOrB,UAAU,aAAjB,kDAIF,yBAAKA,UAAU,cACb,2BACEvB,KAAK,OACLkD,YAAY,UACZtB,KAAK,UACLmB,MAAOwD,EACP3D,SAAUA,IAEZ,2BAAOrB,UAAU,aAAjB,2CAIF,yBAAKA,UAAU,cACb,2BACEvB,KAAK,OACLkD,YAAY,WACZtB,KAAK,WACLmB,MAAOyD,EACP5D,SAAUA,IAEZ,2BAAOrB,UAAU,aAAjB,4CAIF,yBAAKA,UAAU,cACb,2BACEvB,KAAK,OACLkD,YAAY,WACZtB,KAAK,SACLmB,MAAO0D,EACP7D,SAAUA,IAEZ,2BAAOrB,UAAU,aAAjB,oEAIF,yBAAKA,UAAU,cACb,2BACEvB,KAAK,OACLkD,YAAY,kBACZtB,KAAK,iBACLmB,MAAO2D,EACP9D,SAAUA,IAEZ,2BAAOrB,UAAU,aAAjB,2EAKF,yBAAKA,UAAU,cACb,2BACEvB,KAAK,WACL4B,KAAK,kBACL2F,QAASN,EACTrE,SAAUA,IAEZ,2BAAO4E,QAAQ,mBACZ,IADH,8DAKF,yBAAKjG,UAAU,cACb,8BACE2B,YAAY,0BACZtB,KAAK,MACLmB,MAAO4D,EACP/D,SAAUA,IAEZ,2BAAOrB,UAAU,aAAjB,oCAGF,yBAAKA,UAAU,QACb,4BACEC,QAAS,kBAAM4F,GAAoBD,IACnCnH,KAAK,SACLuB,UAAU,iBAHZ,4BAOA,2CAGD4F,GACC,kBAAC,WAAD,KACE,yBAAK5F,UAAU,2BACb,uBAAGA,UAAU,yBACb,2BACEvB,KAAK,OACLkD,YAAY,cACZtB,KAAK,UACLmB,MAAO6D,EACPhE,SAAUA,KAId,yBAAKrB,UAAU,2BACb,uBAAGA,UAAU,0BACb,2BACEvB,KAAK,OACLkD,YAAY,eACZtB,KAAK,WACLmB,MAAO8D,EACPjE,SAAUA,KAId,yBAAKrB,UAAU,2BACb,uBAAGA,UAAU,yBACb,2BACEvB,KAAK,OACLkD,YAAY,cACZtB,KAAK,UACLmB,MAAOgE,EACPnE,SAAUA,KAId,yBAAKrB,UAAU,2BACb,uBAAGA,UAAU,0BACb,2BACEvB,KAAK,OACLkD,YAAY,eACZtB,KAAK,WACLmB,MAAO+D,EACPlE,SAAUA,KAId,yBAAKrB,UAAU,2BACb,uBAAGA,UAAU,2BACb,2BACEvB,KAAK,OACLkD,YAAY,gBACZtB,KAAK,YACLmB,MAAOiE,EACPpE,SAAUA,MAMlB,2BAAO5C,KAAK,SAASuB,UAAU,yBAC/B,kBAAC,IAAD,CAAMA,UAAU,qBAAqBD,GAAG,cAAxC,iBCwBOP,eAJS,SAAAC,GAAK,MAAK,CAC9B8E,QAAS9E,EAAM8E,WAKf,CAAExB,gBAAeH,qBAFNpD,CAGbmG,aAhRkB,SAAC,GAKd,IAAD,IAJJpB,QAAWA,EAIP,EAJOA,QAAS1E,EAIhB,EAJgBA,QACpBkD,EAGI,EAHJA,cACAH,EAEI,EAFJA,kBACAI,EACI,EADJA,QACI,EAC4B/B,mBAAS,CACvC0C,QAAS,GACTqB,QAAS,GACTC,SAAU,GACVnC,OAAQ,GACRoC,OAAQ,GACRC,eAAgB,GAChBC,IAAK,GACLC,QAAS,GACTC,SAAU,GACVC,SAAU,GACVC,QAAS,GACTC,UAAW,GACXC,iBAAiB,IAdf,mBACGvE,EADH,KACaC,EADb,OAiB8CH,oBAAS,GAjBvD,mBAiBG2E,EAjBH,KAiBwBC,EAjBxB,KAmBJjB,qBAAU,WACNhC,IAEAxB,EAAY,CACVuC,QAAS9D,IAAY0E,EAAQZ,QAAU,GAAKY,EAAQZ,QACpDqB,QAASnF,IAAY0E,EAAQS,QAAU,GAAKT,EAAQS,QACpDC,SAAUpF,IAAY0E,EAAQU,SAAW,GAAKV,EAAQU,SACtDnC,OAAQjD,IAAY0E,EAAQzB,OAAS,GAAKyB,EAAQzB,OAClDoC,OAAQrF,IAAY0E,EAAQW,OAAS,GAAKX,EAAQW,OAAOa,KAAK,KAC9DZ,eAAgBtF,IAAY0E,EAAQY,eAAiB,GAAKZ,EAAQY,eAClEO,gBAAiB7F,IAAY0E,EAAQmB,gBAAkB,GAAKnB,EAAQmB,gBACpEN,IAAKvF,IAAY0E,EAAQa,IAAM,GAAKb,EAAQa,IAC5CC,QAASxF,IAAY0E,EAAQ2B,OAAS,GAAK3B,EAAQ2B,OAAOb,QAC1DC,SAAUzF,IAAY0E,EAAQ2B,OAAS,GAAK3B,EAAQ2B,OAAOZ,SAC3DC,SAAU1F,IAAY0E,EAAQ2B,OAAS,GAAK3B,EAAQ2B,OAAOX,SAC3DC,QAAS3F,IAAY0E,EAAQ2B,OAAS,GAAK3B,EAAQ2B,OAAOV,QAC1DC,UAAW5F,IAAY0E,EAAQ2B,OAAS,GAAK3B,EAAQ2B,OAAOT,cAEhE,CAAC5F,EAAS+C,IArCR,IAwCFe,EAaExC,EAbFwC,QACAqB,EAYE7D,EAZF6D,QACAC,EAWE9D,EAXF8D,SACAnC,EAUE3B,EAVF2B,OACAoC,EASE/D,EATF+D,OACAC,EAQEhE,EARFgE,eACAC,EAOEjE,EAPFiE,IACAC,EAMElE,EANFkE,QACAC,EAKEnE,EALFmE,SACAC,EAIEpE,EAJFoE,SACAC,EAGErE,EAHFqE,QACAC,EAEEtE,EAFFsE,UACAC,EACEvE,EADFuE,gBAGIrE,EAAW,SAACC,GAChBF,EAAY,eAAKD,EAAN,eAAiBG,EAAEC,OAAOlB,KAAOiB,EAAEC,OAAOC,SAD/B,MAESF,EAAEC,OAA3BlB,EAFgB,EAEhBA,KAAMmB,EAFU,EAEVA,MAAOwE,EAFG,EAEHA,QACN,oBAAT3F,IAA4BmB,EAAQwE,GACxC5E,EAAY,eAAKD,EAAN,eAAiBd,EAAOmB,MAQrC,OACE,kBAAC,WAAD,KACE,wBAAIxB,UAAU,sBAAd,uBACA,uBAAGA,UAAU,QACX,uBAAGA,UAAU,gBADf,8DAIA,2BAAOuC,MAAO,CAAE4D,MAAO,YAAvB,sBACA,0BAAMnG,UAAU,OAAOyB,SAAU,SAACH,GAAD,OAbpB,SAACA,GAChBA,EAAEI,iBACFqB,EAAc5B,EAAU6B,GAAS,GAWSvB,CAASH,KAC/C,yBAAKtB,UAAU,cACb,4BAAQK,KAAK,SAASmB,MAAOsB,EAAQzB,SAAU,SAACC,GAAD,OAAOD,EAASC,KAC7D,4BAAQE,MAAM,KAAd,gCACA,4BAAQA,MAAM,aAAd,aACA,4BAAQA,MAAM,oBAAd,oBACA,4BAAQA,MAAM,oBAAd,oBACA,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,uBAAd,uBACA,4BAAQA,MAAM,cAAd,yBACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,SAAd,UAEF,2BAAOxB,UAAU,aAAjB,uDAIF,yBAAKA,UAAU,cACb,2BACEvB,KAAK,OACLkD,YAAY,UACZtB,KAAK,UACLmB,MAAOmC,EACPtC,SAAU,SAACC,GAAD,OAAOD,EAASC,MAE5B,2BAAOtB,UAAU,aAAjB,kDAIF,yBAAKA,UAAU,cACb,2BACEvB,KAAK,OACLkD,YAAY,UACZtB,KAAK,UACLmB,MAAOwD,EACP3D,SAAU,SAACC,GAAD,OAAOD,EAASC,MAE5B,2BAAOtB,UAAU,aAAjB,2CAIF,yBAAKA,UAAU,cACb,2BACEvB,KAAK,OACLkD,YAAY,WACZtB,KAAK,WACLmB,MAAOyD,EACP5D,SAAU,SAACC,GAAD,OAAOD,EAASC,MAE5B,2BAAOtB,UAAU,aAAjB,4CAIF,yBAAKA,UAAU,cACb,2BACEvB,KAAK,OACLkD,YAAY,WACZtB,KAAK,SACLmB,MAAO0D,EACP7D,SAAU,SAACC,GAAD,OAAOD,EAASC,MAE5B,2BAAOtB,UAAU,aAAjB,oEAIF,yBAAKA,UAAU,cACb,2BACEvB,KAAK,OACLkD,YAAY,kBACZtB,KAAK,iBACLmB,MAAO2D,EACP9D,SAAU,SAACC,GAAD,OAAOD,EAASC,MAE5B,2BAAOtB,UAAU,aAAjB,2EAKF,yBAAKA,UAAU,cACb,2BACEvB,KAAK,WACL4B,KAAK,kBACL2F,QAASN,EACTrE,SAAUA,IAEZ,2BAAO4E,QAAQ,mBACZ,IADH,8DAKF,yBAAKjG,UAAU,cACb,8BACE2B,YAAY,0BACZtB,KAAK,MACLmB,MAAO4D,EACP/D,SAAU,SAACC,GAAD,OAAOD,EAASC,MAE5B,2BAAOtB,UAAU,aAAjB,oCAGF,yBAAKA,UAAU,QACb,4BACEC,QAAS,kBAAM4F,GAAoBD,IACnCnH,KAAK,SACLuB,UAAU,iBAHZ,4BAOA,2CAGD4F,GACC,kBAAC,WAAD,KACE,yBAAK5F,UAAU,2BACb,uBAAGA,UAAU,yBACb,2BACEvB,KAAK,OACLkD,YAAY,cACZtB,KAAK,UACLmB,MAAO6D,EACPhE,SAAU,SAACC,GAAD,OAAOD,EAASC,OAI9B,yBAAKtB,UAAU,2BACb,uBAAGA,UAAU,0BACb,2BACEvB,KAAK,OACLkD,YAAY,eACZtB,KAAK,WACLmB,MAAO8D,EACPjE,SAAU,SAACC,GAAD,OAAOD,EAASC,OAI9B,yBAAKtB,UAAU,2BACb,uBAAGA,UAAU,yBACb,2BACEvB,KAAK,OACLkD,YAAY,cACZtB,KAAK,UACLmB,MAAOgE,EACPnE,SAAU,SAACC,GAAD,OAAOD,EAASC,OAI9B,yBAAKtB,UAAU,2BACb,uBAAGA,UAAU,0BACb,2BACEvB,KAAK,OACLkD,YAAY,eACZtB,KAAK,WACLmB,MAAO+D,EACPlE,SAAU,SAACC,GAAD,OAAOD,EAASC,OAI9B,yBAAKtB,UAAU,2BACb,uBAAGA,UAAU,2BACb,2BACEvB,KAAK,OACLkD,YAAY,gBACZtB,KAAK,YACLmB,MAAOiE,EACPpE,SAAU,SAACC,GAAD,OAAOD,EAASC,QAMlC,2BAAO7C,KAAK,SAASuB,UAAU,yBAC/B,kBAAC,IAAD,CAAMA,UAAU,qBAAqBD,GAAG,cAAxC,iBC5HOP,cAAQ,KAAM,CAAE4G,cNZF,SAACjF,EAAU6B,GAAX,8CAAuB,WAAO1E,GAAP,mBAAAa,EAAA,sEAE1CqB,EAAS,CACbxB,QAAS,CACP,eAAgB,qBAJ4B,SAQ9BF,IAAMuH,IAAI,0BAA2BlF,EAAUX,GARjB,OAQ1ClB,EAR0C,OAUhDhB,EAAS,CACPG,KVvHwB,iBUwHxBC,QAASY,EAAIC,OAGfjB,EAASJ,EAAS,mBAAoB,YAEtC8E,EAAQE,KAAK,cAjBmC,mDAmB1CrC,EAAS,KAAIC,SAASvB,KAAKsB,SAG/BA,EAAOE,SAAQ,SAACC,GAAD,OAAW1C,EAASJ,EAAS8C,EAAM7C,IAAK,cAGzDG,EAAS,CACPG,KVrIuB,gBUsIvBC,QAAS,CAAEP,IAAK,KAAI2C,SAAS+B,WAAYC,OAAQ,KAAIhC,SAASgC,UA3BhB,0DAAvB,wDMYdtD,CAAiCmG,aA/H1B,SAAC,GAAgC,IAA9BS,EAA6B,EAA7BA,cAAepD,EAAc,EAAdA,QAAc,EAClB/B,mBAAS,CACvC0C,QAAS,GACTC,MAAO,GACPqB,SAAU,GACVnB,KAAM,GACN/D,GAAI,GACJuG,SAAS,EACTC,YAAa,KARmC,mBAC3CpF,EAD2C,KACjCC,EADiC,OAWTH,oBAAS,GAXA,mBAW3CuF,EAX2C,KAW3BC,EAX2B,KAchD9C,EAOExC,EAPFwC,QACAC,EAMEzC,EANFyC,MACAqB,EAKE9D,EALF8D,SACAnB,EAIE3C,EAJF2C,KACA/D,EAGEoB,EAHFpB,GACAuG,EAEEnF,EAFFmF,QACAC,EACEpF,EADFoF,YAGIlF,EAAW,SAACC,GAAD,OACfF,EAAY,eAAKD,EAAN,eAAiBG,EAAEC,OAAOlB,KAAOiB,EAAEC,OAAOC,UAEvD,OACE,kBAAC,WAAD,KACE,wBAAIxB,UAAU,sBAAd,qBACA,uBAAGA,UAAU,QACX,uBAAGA,UAAU,uBADf,0EAIA,2BAAOuC,MAAO,CAAC4D,MAAM,YAArB,sBACA,0BACEnG,UAAU,OACVyB,SAAU,SAACH,GACTA,EAAEI,iBACF0E,EAAcjF,EAAU6B,KAG1B,yBAAKhD,UAAU,cACb,2BACEvB,KAAK,OACLkD,YAAY,cACZtB,KAAK,QACLmB,MAAOoC,EACPvC,SAAU,SAACC,GAAD,OAAOD,EAASC,IAC1BM,UAAQ,KAGZ,yBAAK5B,UAAU,cACb,2BACEvB,KAAK,OACLkD,YAAY,YACZtB,KAAK,UACLmB,MAAOmC,EACPtC,SAAU,SAACC,GAAD,OAAOD,EAASC,IAC1BM,UAAQ,KAGZ,yBAAK5B,UAAU,cACb,2BACEvB,KAAK,OACLkD,YAAY,WACZtB,KAAK,WACLmB,MAAOyD,EACP5D,SAAU,SAACC,GAAD,OAAOD,EAASC,OAG9B,yBAAKtB,UAAU,cACb,yCACA,2BACEvB,KAAK,OACL4B,KAAK,OACLmB,MAAOsC,EACPzC,SAAU,SAACC,GAAD,OAAOD,EAASC,OAG9B,yBAAKtB,UAAU,cACb,2BACE,2BACEvB,KAAK,WACL4B,KAAK,UACL2F,QAASM,EACT9E,MAAO8E,EACPjF,SAAU,WACRD,EAAY,eAAKD,EAAN,CAAgBmF,SAAUA,KACrCG,GAAgBD,MAEjB,IAVL,gBAcF,yBAAKxG,UAAU,cACb,uCACA,2BACEvB,KAAK,OACL4B,KAAK,KACLmB,MAAOzB,EACPsB,SAAU,SAACC,GAAD,OAAOD,EAASC,IAC1BoF,SAAUF,EAAiB,WAAa,MAG5C,yBAAKxG,UAAU,cACb,8BACEK,KAAK,cACLsG,KAAK,KACLC,KAAK,IACLjF,YAAY,kBACZH,MAAO+E,EACPlF,SAAU,SAACC,GAAD,OAAOD,EAASC,OAG9B,2BAAO7C,KAAK,SAASuB,UAAU,yBAC/B,kBAAC,IAAD,CAAMA,UAAU,qBAAqBD,GAAG,cAAxC,iBCYKP,cAAQ,KAAM,CAAEqH,aPqBH,SAAC1F,EAAU6B,GAAX,8CAAuB,WAAO1E,GAAP,mBAAAa,EAAA,sEAEzCqB,EAAS,CACbxB,QAAS,CACP,eAAgB,qBAJ2B,SAQ7BF,IAAMuH,IAAI,yBAA0BlF,EAAUX,GARjB,OAQzClB,EARyC,OAU/ChB,EAAS,CACPG,KVxJwB,iBUyJxBC,QAASY,EAAIC,OAGfjB,EAASJ,EAAS,kBAAmB,YAErC8E,EAAQE,KAAK,cAjBkC,mDAmBzCrC,EAAS,KAAIC,SAASvB,KAAKsB,SAG/BA,EAAOE,SAAQ,SAACC,GAAD,OAAW1C,EAASJ,EAAS8C,EAAM7C,IAAK,cAGzDG,EAAS,CACPG,KVtKuB,gBUuKvBC,QAAS,CAAEP,IAAK,KAAI2C,SAAS+B,WAAYC,OAAQ,KAAIhC,SAASgC,UA3BjB,0DAAvB,wDOrBbtD,CAAgCmG,aA/H1B,SAAC,GAA+B,IAA7BkB,EAA4B,EAA5BA,aAAc7D,EAAc,EAAdA,QAAc,EAClB/B,mBAAS,CACvCkD,OAAQ,GACRC,OAAQ,GACR0C,aAAc,GACdhD,KAAM,GACN/D,GAAI,GACJuG,SAAS,EACTC,YAAa,KARmC,mBAC3CpF,EAD2C,KACjCC,EADiC,OAWTH,oBAAS,GAXA,mBAW3CuF,EAX2C,KAW3BC,EAX2B,KAchDtC,EAOEhD,EAPFgD,OACAC,EAMEjD,EANFiD,OACA0C,EAKE3F,EALF2F,aACAhD,EAIE3C,EAJF2C,KACA/D,EAGEoB,EAHFpB,GACAuG,EAEEnF,EAFFmF,QACAC,EACEpF,EADFoF,YAGIlF,EAAW,SAACC,GAAD,OACfF,EAAY,eAAKD,EAAN,eAAiBG,EAAEC,OAAOlB,KAAOiB,EAAEC,OAAOC,UAEvD,OACE,kBAAC,WAAD,KACE,wBAAIxB,UAAU,sBAAd,sBACA,uBAAGA,UAAU,QACX,uBAAGA,UAAU,uBADf,sDAIA,2BAAOuC,MAAO,CAAC4D,MAAM,YAArB,sBACA,0BACEnG,UAAU,OACVyB,SAAU,SAACH,GACTA,EAAEI,iBACFmF,EAAa1F,EAAU6B,KAGzB,yBAAKhD,UAAU,cACb,2BACEvB,KAAK,OACLkD,YAAY,uBACZtB,KAAK,SACLmB,MAAO2C,EACP9C,SAAU,SAACC,GAAD,OAAOD,EAASC,IAC1BM,UAAQ,KAGZ,yBAAK5B,UAAU,cACb,2BACEvB,KAAK,OACLkD,YAAY,0BACZtB,KAAK,SACLmB,MAAO4C,EACP/C,SAAU,SAACC,GAAD,OAAOD,EAASC,IAC1BM,UAAQ,KAGZ,yBAAK5B,UAAU,cACb,2BACEvB,KAAK,OACLkD,YAAY,iBACZtB,KAAK,eACLmB,MAAOsF,EACPzF,SAAU,SAACC,GAAD,OAAOD,EAASC,OAG9B,yBAAKtB,UAAU,cACb,yCACA,2BACEvB,KAAK,OACL4B,KAAK,OACLmB,MAAOsC,EACPzC,SAAU,SAACC,GAAD,OAAOD,EAASC,OAG9B,yBAAKtB,UAAU,cACb,2BACE,2BACEvB,KAAK,WACL4B,KAAK,UACL2F,QAASM,EACT9E,MAAO8E,EACPjF,SAAU,WACRD,EAAY,eAAKD,EAAN,CAAgBmF,SAAUA,KACrCG,GAAgBD,MAEjB,IAVL,mBAcF,yBAAKxG,UAAU,cACb,uCACA,2BACEvB,KAAK,OACL4B,KAAK,KACLmB,MAAOzB,EACPsB,SAAU,SAACC,GAAD,OAAOD,EAASC,IAC1BoF,SAAUF,EAAiB,WAAa,MAG5C,yBAAKxG,UAAU,cACb,8BACEK,KAAK,cACLsG,KAAK,KACLC,KAAK,IACLjF,YAAY,sBACZH,MAAO+E,EACPlF,SAAU,SAACC,GAAD,OAAOD,EAASC,OAG9B,2BAAO7C,KAAK,SAASuB,UAAU,yBAC/B,kBAAC,IAAD,CAAMA,UAAU,qBAAqBD,GAAG,cAAxC,iBCrEOgH,EA/CK,SAAC,GASd,IAAD,IARJxC,QAQI,IAPFI,KAAQjB,EAON,EAPMA,IAAKrD,EAOX,EAPWA,KAAM2G,EAOjB,EAPiBA,OACnBlE,EAME,EANFA,OACAa,EAKE,EALFA,QACAsB,EAIE,EAJFA,SACAC,EAGE,EAHFA,OACArF,EAEE,EAFFA,QAGF,OACE,kBAAC,WAAD,KACGA,EACC,kBAACgF,EAAD,MAEA,kBAAC,WAAD,KACE,yBAAK7E,UAAU,oBACb,yBAAKqC,IAAK2E,EAAQrE,IAAI,GAAG3C,UAAU,cACnC,6BACE,4BAAKK,GACL,2BACGyC,EADH,IACYa,GAAW,qCAAWA,GAAiB,KAEnD,uBAAG3D,UAAU,QAAQiF,GAAY,qCAAWA,IAC5C,kBAAC,IAAD,CAAMlF,GAAE,mBAAc2D,GAAO1D,UAAU,mBAAvC,iBAIF,4BACGkF,EAAO+B,MAAM,EAAG,GAAG/E,KAAI,SAACgF,EAAOC,GAAR,OACtB,wBAAIhF,IAAKgF,EAAOnH,UAAU,gBACxB,uBAAGA,UAAU,iBACZkH,WCMJ1H,eAJS,SAAAC,GAAK,MAAI,CAC7B8E,QAAS9E,EAAM8E,WAGqB,CAAE6C,YTXf,yDAAM,WAAO9I,GAAP,eAAAa,EAAA,6DAC/Bb,EAAS,CAAEG,KVlBgB,kBUiBI,kBAIXK,IAAMO,IAAI,gBAJC,OAIvBC,EAJuB,OAM7BhB,EAAS,CACPG,KV7BsB,eU8BtBC,QAASY,EAAIC,OARc,gDAW7BjB,EAAS,CACPG,KV9BuB,gBU+BvBC,QAAS,CAAEP,IAAK,KAAI2C,SAAS+B,WAAYC,OAAQ,KAAIhC,SAASgC,UAbnC,yDAAN,wDSWZtD,EApCE,SAAC,GAAoD,IAAlD4H,EAAiD,EAAjDA,YAAiD,IAApC7C,QAAU8C,EAA0B,EAA1BA,SAAUxH,EAAgB,EAAhBA,QAIjD,OAHA+E,qBAAU,WACNwC,MACF,CAACA,IAED,kBAAC,WAAD,KACGvH,EACC,kBAACgF,EAAD,MAEA,kBAAC,WAAD,KACE,wBAAI7E,UAAU,sBAAd,cACA,uBAAGA,UAAU,QACT,uBAAGA,UAAU,0BADjB,uCAGA,yBAAKA,UAAU,YACVqH,EAASpF,OAAS,EACfoF,EAASnF,KAAI,SAAAqC,GAAO,OAChB,kBAAC,EAAD,CAAcpC,IAAKoC,EAAQb,IAAKa,QAASA,OAE7C,0DCmCL+C,EA1DI,SAAC,GASb,IAAD,IARJ/C,QACEzB,EAOE,EAPFA,OACAa,EAME,EANFA,QACAsB,EAKE,EALFA,SACAD,EAIE,EAJFA,QACAkB,EAGE,EAHFA,OAGE,IAFFvB,KAAQtE,EAEN,EAFMA,KAAM2G,EAEZ,EAFYA,OAGhB,OACE,yBAAKhH,UAAU,8BACb,yBAAKA,UAAU,iBAAiBqC,IAAK2E,EAAQrE,IAAI,KACjD,wBAAI3C,UAAU,SAASK,GACvB,uBAAGL,UAAU,QACV8C,EADH,IACYa,GAAW,qCAAWA,GAAiB,KAEnD,2BAAIsB,GAAY,8BAAOA,IACvB,yBAAKjF,UAAU,cACZgF,GACC,uBAAG7E,KAAM6E,EAASzD,OAAO,SAASgG,IAAI,uBACpC,uBAAGvH,UAAU,wBAGhBkG,GAAUA,EAAOb,SAChB,uBAAGlF,KAAM+F,EAAOb,QAAS9D,OAAO,SAASgG,IAAI,uBAC3C,uBAAGvH,UAAU,0BAGhBkG,GAAUA,EAAOZ,UAChB,uBAAGnF,KAAM+F,EAAOZ,SAAU/D,OAAO,SAASgG,IAAI,uBAC5C,uBAAGvH,UAAU,2BAGhBkG,GAAUA,EAAOX,UAChB,uBAAGpF,KAAM+F,EAAOX,SAAUhE,OAAO,SAASgG,IAAI,uBAC5C,uBAAGvH,UAAU,2BAGhBkG,GAAUA,EAAOV,SAChB,uBAAGrF,KAAM+F,EAAOV,QAASjE,OAAO,SAASgG,IAAI,uBAC3C,uBAAGvH,UAAU,0BAGhBkG,GAAUA,EAAOT,WAChB,uBAAGtF,KAAM+F,EAAOT,UAAWlE,OAAO,SAASgG,IAAI,uBAC7C,uBAAGvH,UAAU,+BCXVwH,EAnCM,SAAC,GAMf,IAAD,IALJjD,QACEa,EAIE,EAJFA,IACAF,EAGE,EAHFA,OACQ7E,EAEN,EAFFsE,KAAQtE,KAGV,OACE,yBAAKL,UAAU,8BACZoF,GACC,kBAAC,WAAD,KACE,wBAAIpF,UAAU,gBAAgBK,EAAKoH,OAAOC,MAAM,KAAK,GAArD,UACA,2BACGtC,GAEH,yBAAKpF,UAAU,UAInB,wBAAIA,UAAU,gBAAd,aACA,yBAAKA,UAAU,UACZkF,EAAOhD,KAAI,SAACgF,EAAOC,GAAR,OACR,yBAAKhF,IAAKgF,EAAOnH,UAAU,OACvB,uBAAGA,UAAU,iBADjB,IACsCkH,SCInCS,EAzBW,SAAC,GAAD,QACxBtE,WAAcM,EADU,EACVA,QAASC,EADC,EACDA,MAAOqB,EADN,EACMA,SAAmBlF,GADzB,EACgBuG,QADhB,EACyBvG,IAAI+D,EAD7B,EAC6BA,KAAMyC,EADnC,EACmCA,YADnC,OAGxB,6BACE,wBAAIvG,UAAU,aAAa2D,GAC3B,2BACE,kBAAC,IAAD,CAAQE,OAAO,cAAcQ,IAAOC,IAAIR,IAD1C,KAC4D,IACxD/D,EAAc,kBAAC,IAAD,CAAQ8D,OAAO,cAAcQ,IAAOC,IAAIvE,IAAjD,QAET,2BACE,8CADF,IAC+B6D,GAE/B,2BACE,8CADF,IAC+BqB,GAE/B,2BACE,iDADF,IACkCsB,KCSvBqB,EAzBU,SAAC,GAAD,QACvB5D,UAAaG,EADU,EACVA,OAAQC,EADE,EACFA,OAAQ0C,EADN,EACMA,aAAuB/G,GAD7B,EACoBuG,QADpB,EAC6BvG,IAAI+D,EADjC,EACiCA,KAAMyC,EADvC,EACuCA,YADvC,OAGvB,6BACE,wBAAIvG,UAAU,aAAamE,GAC3B,2BACE,kBAAC,IAAD,CAAQN,OAAO,cAAcQ,IAAOC,IAAIR,IAD1C,KAC4D,IACxD/D,EAAc,kBAAC,IAAD,CAAQ8D,OAAO,cAAcQ,IAAOC,IAAIvE,IAAjD,QAET,2BACE,4CADF,IAC6BqE,GAE7B,2BACE,oDADF,IACqC0C,GAErC,2BACE,iDADF,IACkCP,KCsCvB/G,eAJS,SAACC,GAAD,MAAY,CAClCoI,MAAOpI,EAAM8E,QAAQsD,SAGiB,CAAEC,edSZ,SAACC,GAAD,8CAAc,WAAOzJ,GAAP,eAAAa,EAAA,+EAEtBL,IAAMO,IAAN,8BAAiC0I,IAFX,OAElCzI,EAFkC,OAIxChB,EAAS,CACPG,KV9DmB,YU+DnBC,QAASY,EAAIC,OANyB,gDASxCjB,EAAS,CACPG,KVlEkB,aUwDoB,yDAAd,wDcTfe,EArDO,SAAC,GAAyC,IAAvCuI,EAAsC,EAAtCA,SAAUD,EAA4B,EAA5BA,eAAgBD,EAAY,EAAZA,MAKjD,OAJAjD,qBAAU,WACRkD,EAAeC,KACd,CAACD,EAAgBC,IAGlB,yBAAK/H,UAAU,kBACb,wBAAIA,UAAU,qBAAd,gBACW,OAAV6H,EACC,kBAAChD,EAAD,MAEAgD,EAAM3F,KAAI,SAAC8F,GAAD,OACR,yBAAK7F,IAAK6F,EAAKzJ,GAAIyB,UAAU,0BAC3B,6BACE,4BACE,uBACEG,KAAM6H,EAAKC,SACX1G,OAAO,SACPgG,IAAI,uBAEHS,EAAK3H,OAGV,2BAAI2H,EAAKzB,cAEX,6BACE,4BACE,wBAAIvG,UAAU,uBAAd,UACUgI,EAAKE,kBAEf,wBAAIlI,UAAU,oBAAd,aACagI,EAAKG,gBAElB,wBAAInI,UAAU,qBAAd,UAA0CgI,EAAKI,uBCwDhD5I,eALS,SAACC,GAAD,MAAY,CAClC8E,QAAS9E,EAAM8E,QACf7E,KAAMD,EAAMC,QAG0B,CAAE2I,ef5CZ,SAACC,GAAD,8CAAY,WAAOhK,GAAP,eAAAa,EAAA,+EAEpBL,IAAMO,IAAN,4BAA+BiJ,IAFX,OAEhChJ,EAFgC,OAItChB,EAAS,CACPG,KV/CqB,cUgDrBC,QAASY,EAAIC,OANuB,gDAStCjB,EAAS,CACPG,KV/CuB,gBUgDvBC,QAAS,CAAEP,IAAK,KAAI2C,SAAS+B,WAAYC,OAAQ,KAAIhC,SAASgC,UAX1B,yDAAZ,wDe4CftD,EAnFC,SAAC,GAA2D,IAAzD6I,EAAwD,EAAxDA,eAA2B9D,EAA6B,EAAxCA,QAAWA,QAAW7E,EAAkB,EAAlBA,KAAM6I,EAAY,EAAZA,MAMvDC,GAAejE,EAKrB,OAJAK,qBAAU,WACJ4D,GAAaH,EAAeE,EAAME,OAAOlK,MAC5C,CAAC8J,EAAgBE,EAAME,OAAOlK,GAAIiK,IAGnC,kBAAC,WAAD,KACe,OAAZjE,EACC,kBAACM,EAAD,MAEA,kBAAC,WAAD,KACE,kBAAC,IAAD,CAAM9E,GAAG,YAAYC,UAAU,iBAA/B,oBAGCN,EAAKE,kBACa,IAAjBF,EAAKG,SACLH,EAAKiF,KAAKjB,MAAQa,EAAQI,KAAKjB,KAC7B,kBAAC,IAAD,CAAM3D,GAAG,gBAAgBC,UAAU,gBAAnC,gBAIJ,yBAAKA,UAAU,qBACb,kBAAC,EAAD,CAAYuE,QAASA,IACrB,kBAAC,EAAD,CAAcA,QAASA,IACvB,yBAAKvE,UAAU,4BACb,wBAAIA,UAAU,gBAAd,cACCuE,EAAQlB,WAAWpB,OAAS,EAC3B,kBAAC,WAAD,KACGsC,EAAQlB,WAAWnB,KAAI,SAACmB,GAAD,OACtB,kBAAC,EAAD,CACElB,IAAKkB,EAAWK,IAChBL,WAAYA,QAKlB,0DAIJ,yBAAKrD,UAAU,4BACb,wBAAIA,UAAU,gBAAd,aACCuE,EAAQP,UAAU/B,OAAS,EAC1B,kBAAC,WAAD,KACGsC,EAAQP,UAAU9B,KAAI,SAAC8B,GAAD,OACrB,kBAAC,EAAD,CACE7B,IAAK6B,EAAUN,IACfM,UAAWA,QAKjB,yDAIHO,EAAQY,gBACP,kBAAC,EAAD,CAAe4C,SAAUxD,EAAQY,uBCnEzCuD,EAAW,SAAC,GAAD,IACfC,EADe,EACfA,QACAC,EAFe,EAEfA,WACAC,EAHe,EAGfA,WACAnJ,EAJe,EAIfA,KAJe,IAKfkB,KAAQ8C,EALO,EAKPA,IAAKoF,EALE,EAKFA,KAAMzI,EALJ,EAKIA,KAAM2G,EALV,EAKUA,OAAQrC,EALlB,EAKkBA,KAAMoE,EALxB,EAKwBA,MAAOC,EAL/B,EAK+BA,SAAUC,EALzC,EAKyCA,KACxDC,EANe,EAMfA,YANe,OAQf,yBAAKlJ,UAAU,0BACb,6BACE,kBAAC,IAAD,CAAMD,GAAE,mBAAc4E,IACpB,yBAAK3E,UAAU,YAAYqC,IAAK2E,EAAQrE,IAAI,KAC5C,4BAAKtC,KAGT,6BACE,uBAAGL,UAAU,cAAcuC,MAAO,CAAE4G,UAAW,cAC5CL,GAEH,uBAAG9I,UAAU,aAAb,aACY,kBAAC,IAAD,CAAQ6D,OAAO,cAAcoF,IAGxCC,GACC,kBAAC,WAAD,KACE,4BACEjJ,QAAS,SAACqB,GAAD,OAAOqH,EAAQjF,IACxBjF,KAAK,SACLuB,UAAU,iBAEV,uBAAGA,UAAU,qBAAwB,IACrC,8BAAO+I,EAAM9G,OAAS,GAAK,8BAAO8G,EAAM9G,UAE1C,4BACEhC,QAAS,SAACqB,GAAD,OAAOsH,EAAWlF,IAC3BjF,KAAK,SACLuB,UAAU,iBAEV,uBAAGA,UAAU,wBAEf,kBAAC,IAAD,CAAMD,GAAE,iBAAY2D,GAAO1D,UAAU,mBAArC,aACa,IACVgJ,EAAS/G,OAAS,GACjB,0BAAMjC,UAAU,iBAAiBgJ,EAAS/G,UAG5CvC,EAAKG,SAAW8E,IAASjF,EAAKiF,KAAKjB,KACnC,4BACEzD,QAAS,SAACqB,GAAD,OAAOuH,EAAWnF,IAC3BjF,KAAK,SACLuB,UAAU,kBAEV,uBAAGA,UAAU,sBAS3B0I,EAASU,aAAe,CACpBF,aAAa,GAWjB,IAIe1J,gBAJS,SAAAC,GAAK,MAAK,CAC9BC,KAAMD,EAAMC,QAGwB,CAAEiJ,QCtDnB,SAAApK,GAAE,8CAAI,WAAMD,GAAN,eAAAa,EAAA,+EAEHL,IAAMuH,IAAN,0BAA6B9H,IAF1B,OAEfe,EAFe,OAIrBhB,EAAS,CACLG,K3BhBgB,e2BiBhBC,QAAS,CAAEH,KAAIwK,MAAOzJ,EAAIC,QANT,gDASrBjB,EAAS,CACLG,K3BtBc,a2BuBdC,QAAS,CAACP,IAAK,KAAI2C,SAAS+B,WAAYC,OAAQ,KAAIhC,SAASgC,UAX5C,yDAAJ,uDDsD0B8F,WCrCzB,SAAArK,GAAE,8CAAI,WAAMD,GAAN,eAAAa,EAAA,+EAENL,IAAMuH,IAAN,4BAA+B9H,IAFzB,OAElBe,EAFkB,OAIxBhB,EAAS,CACLG,K3BjCgB,e2BkChBC,QAAS,CAAEH,KAAIwK,MAAOzJ,EAAIC,QANN,gDASxBjB,EAAS,CACLG,K3BvCc,a2BwCdC,QAAS,CAACP,IAAK,KAAI2C,SAAS+B,WAAYC,OAAQ,KAAIhC,SAASgC,UAXzC,yDAAJ,uDDqCmC+F,WCpBrC,SAAAtK,GAAE,8CAAI,WAAMD,GAAN,SAAAa,EAAA,+EAElBL,IAAMsE,OAAN,qBAA2B7E,IAFT,OAIxBD,EAAS,CACLG,K3BjDe,c2BkDfC,QAASH,IAGbD,EAASJ,EAAS,eAAgB,YATV,gDAWxBI,EAAS,CACLG,K3B1Dc,a2B2DdC,QAAS,CAACP,IAAK,KAAI2C,SAAS+B,WAAYC,OAAQ,KAAIhC,SAASgC,UAbzC,yDAAJ,wDDoBbtD,CAA8DkJ,GEjD9DlJ,eAAS,KAAM,CAAE6J,QDgDT,SAAAC,GAAQ,8CAAI,WAAMhL,GAAN,iBAAAa,EAAA,6DACzBqB,EAAS,CACXxB,QAAS,CACL,eAAgB,qBAHO,kBAQTF,IAAM8B,KAAN,aAAyB0I,EAAU9I,GAR1B,OAQrBlB,EARqB,OAU3BhB,EAAS,CACLG,K3BzEY,W2B0EZC,QAASY,EAAIC,OAGjBjB,EAASJ,EAAS,eAAgB,YAfP,gDAiB3BI,EAAS,CACLG,K3BnFc,a2BoFdC,QAAS,CAACP,IAAK,KAAI2C,SAAS+B,WAAYC,OAAQ,KAAIhC,SAASgC,UAnBtC,yDAAJ,wDChDhBtD,EA/BE,SAAC,GAAiB,IAAf6J,EAAc,EAAdA,QAAc,EACNpI,mBAAS,IADH,mBACvB6H,EADuB,KACjBS,EADiB,KAE9B,OACE,yBAAKvJ,UAAU,aACb,yBAAKA,UAAU,gBACb,iDAEF,0BAAMA,UAAU,YAAYyB,SAAU,SAAAH,GAClCA,EAAEI,iBACF2H,EAAQ,CAACP,SACTS,EAAQ,MAEV,8BACElJ,KAAK,OACLsG,KAAK,KACLC,KAAK,IACLjF,YAAY,gBACZH,MAAOsH,EACPzH,SAAU,SAAAC,GAAC,OAAEiI,EAAQjI,EAAEC,OAAOC,QAC9BI,UAAQ,IAEV,2BAAOnD,KAAK,SAASuB,UAAU,oBAAoBwB,MAAM,gBCgBpDhC,gBAJS,SAAAC,GAAK,MAAK,CAC9BmB,KAAMnB,EAAMmB,QAGwB,CAAC4I,SF5BjB,yDAAM,WAAMlL,GAAN,eAAAa,EAAA,+EAEJL,IAAMO,IAAI,cAFN,OAEhBC,EAFgB,OAItBhB,EAAS,CACLG,K3BFa,Y2BGbC,QAASY,EAAIC,OANK,gDAStBjB,EAAS,CACLG,K3BLc,a2BMdC,QAAS,CAACP,IAAK,KAAI2C,SAAS+B,WAAYC,OAAQ,KAAIhC,SAASgC,UAX3C,yDAAN,wDE4BTtD,EAlCD,SAAC,GAAyC,IAAxCgK,EAAuC,EAAvCA,SAAuC,IAA7B5I,KAAO6I,EAAsB,EAAtBA,MAAO5J,EAAe,EAAfA,QAKpC,OAJA+E,qBAAU,WACN4E,MACF,CAACA,IAEI3J,EACL,kBAACgF,EAAD,MAEA,kBAAC,WAAD,KACE,wBAAI7E,UAAU,sBAAd,SACA,uBAAGA,UAAU,QACX,uBAAGA,UAAU,gBAAmB,IADlC,4BAKA,kBAAC,GAAD,MACA,yBAAKA,UAAU,SACZyJ,EAAMvH,KAAI,SAACtB,GAAD,OACT,kBAAC,GAAD,CAAUuB,IAAKvB,EAAK8C,IAAK9C,KAAMA,YCc5BpB,eAAQ,KAAM,CAAEkK,WHsFL,SAACC,EAAQxI,GAAT,8CAAsB,WAAM7C,GAAN,iBAAAa,EAAA,6DACtCqB,EAAS,CACXxB,QAAS,CACL,eAAgB,qBAHoB,kBAQtBF,IAAM8B,KAAN,6BAAiC+I,GAAUxI,EAAUX,GAR/B,OAQlClB,EARkC,OAUxChB,EAAS,CACLG,K3BlHe,c2BmHfC,QAASY,EAAIC,OAGjBjB,EAASJ,EAAS,gBAAiB,YAfK,gDAiBxCI,EAAS,CACLG,K3B7Hc,a2B8HdC,QAAS,CAACP,IAAK,KAAI2C,SAAS+B,WAAYC,OAAQ,KAAIhC,SAASgC,UAnBzB,yDAAtB,wDGtFXtD,EAnCK,SAAC,GAA4B,IAA1BmK,EAAyB,EAAzBA,OAAQD,EAAiB,EAAjBA,WAAiB,EACtBzI,mBAAS,IADa,mBACvC6H,EADuC,KACjCS,EADiC,KAG9C,OACE,yBAAKvJ,UAAU,aACb,yBAAKA,UAAU,gBACb,gDAEF,0BACEA,UAAU,YACVyB,SAAU,SAACH,GACTA,EAAEI,iBACFgI,EAAWC,EAAQ,CAAEb,SACrBS,EAAQ,MAGV,8BACElJ,KAAK,OACLsG,KAAK,KACLC,KAAK,IACLjF,YAAY,gBACZH,MAAOsH,EACPzH,SAAU,SAACC,GAAD,OAAOiI,EAAQjI,EAAEC,OAAOC,QAClCI,UAAQ,IAEV,2BAAOnD,KAAK,SAASuB,UAAU,oBAAoBwB,MAAM,gBCelDhC,gBAJS,SAAAC,GAAK,MAAI,CAC7BC,KAAMD,EAAMC,QAGwB,CAACkK,cJ0GZ,SAACD,EAAQE,GAAT,8CAAuB,WAAMvL,GAAN,SAAAa,EAAA,+EAEtCL,IAAMsE,OAAN,6BAAmCuG,EAAnC,YAA6CE,IAFP,OAI5CvL,EAAS,CACLG,K3BpIkB,iB2BqIlBC,QAASmL,IAGbvL,EAASJ,EAAS,kBAAmB,YATO,gDAW5CI,EAAS,CACLG,K3BhJc,a2BiJdC,QAAS,CAACP,IAAK,KAAI2C,SAAS+B,WAAYC,OAAQ,KAAIhC,SAASgC,UAbrB,yDAAvB,wDI1GdtD,EAtCK,SAAC,GAAD,IAClBmK,EADkB,EAClBA,OADkB,IAElBG,QAAWpG,EAFO,EAEPA,IAAKoF,EAFE,EAEFA,KAAMzI,EAFJ,EAEIA,KAAM2G,EAFV,EAEUA,OAAQrC,EAFlB,EAEkBA,KAAMsE,EAFxB,EAEwBA,KAC1CvJ,EAHkB,EAGlBA,KACAkK,EAJkB,EAIlBA,cAJkB,OAMlB,yBAAK5J,UAAU,0BACb,6BACE,kBAAC,IAAD,CAAMD,GAAE,mBAAc4E,IACpB,yBAAK3E,UAAU,YAAYqC,IAAK2E,EAAQrE,IAAI,KAC5C,4BAAKtC,KAGT,6BACE,uBAAGL,UAAU,cAAcuC,MAAO,CAAC4G,UAAU,cAAeL,GAC5D,uBAAG9I,UAAU,aAAb,aACY,kBAAC,IAAD,CAAQ6D,OAAO,cAAcoF,KAEvCvJ,EAAKG,SAAW8E,IAASjF,EAAKiF,KAAKjB,KACnC,4BAAQzD,QAAS,SAAAqB,GAAC,OAAEsI,EAAcD,EAAQjG,IAAMjF,KAAK,SAASuB,UAAU,kBACpE,uBAAGA,UAAU,uBCeVR,gBAJS,SAAAC,GAAK,MAAK,CAC9BmB,KAAMnB,EAAMmB,QAGwB,CAACmJ,QLmElB,SAAAxL,GAAE,8CAAI,WAAMD,GAAN,eAAAa,EAAA,+EAEHL,IAAMO,IAAN,qBAAwBd,IAFrB,OAEfe,EAFe,OAIrBhB,EAAS,CACLG,K3BhGY,W2BiGZC,QAASY,EAAIC,OANI,gDASrBjB,EAAS,CACLG,K3BpGc,a2BqGdC,QAAS,CAACP,IAAK,KAAI2C,SAAS+B,WAAYC,OAAQ,KAAIhC,SAASgC,UAX5C,yDAAJ,wDKnEVtD,EAhCF,SAAC,GAAiD,IAA/CuK,EAA8C,EAA9CA,QAA8C,IAArCnJ,KAAQA,EAA6B,EAA7BA,KAAMf,EAAuB,EAAvBA,QAAW0I,EAAY,EAAZA,MAKhD,OAJE3D,qBAAU,WACNmF,EAAQxB,EAAME,OAAOlK,MACtB,CAACwL,EAASxB,EAAME,OAAOlK,KAErBsB,GAAoB,OAATe,EAChB,kBAACiE,EAAD,MAEA,kBAAC,WAAD,KACE,kBAAC,IAAD,CAAM9E,GAAG,SAASC,UAAU,gBAA5B,iBAGA,kBAAC,GAAD,CAAUY,KAAMA,EAAMsI,aAAa,IACnC,kBAAC,GAAD,CAAaS,OAAQ/I,EAAK8C,MAC1B,yBAAK1D,UAAU,YACZY,EAAKoI,SAAS9G,KAAI,SAAC4H,GAAD,OACjB,kBAAC,GAAD,CAAa3H,IAAK2H,EAAQpG,IAAKoG,QAASA,EAASH,OAAQ/I,EAAK8C,cCTzDsG,GAfE,SAAAC,GACb,OACI,kBAAC,WAAD,KACI,wBAAIjK,UAAU,wBACV,uBAAGA,UAAU,gCADjB,mBAGA,gE,SCqBGR,gBAJS,SAAAC,GAAK,MAAK,CAC9BC,KAAMD,EAAMC,QAGDF,EAzBM,SAAC,GAAD,IACR0K,EADQ,EACnBC,UADmB,IAEnBzK,KAAQE,EAFW,EAEXA,gBAAiBC,EAFN,EAEMA,QACtBuK,EAHgB,4CAKnB,kBAAC,IAAD,iBACMA,EADN,CAEEC,OAAQ,SAACJ,GAAD,OACLrK,GAAoBC,EAGnB,kBAACqK,EAAcD,GAFf,kBAAC,IAAD,CAAUlK,GAAG,kBCkCNuK,GA9BA,WACX,OACE,6BAAStK,UAAU,aACjB,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOuK,OAAK,EAACC,KAAK,YAAYL,UAAWM,IACzC,kBAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,SAASL,UAAWO,IAAU,IAChD,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,YAAYL,UAAWQ,IACzC,kBAAC,IAAD,CAAOJ,OAAK,EAACC,KAAK,eAAeL,UAAWS,IAC5C,kBAAC,GAAD,CAAcL,OAAK,EAACC,KAAK,aAAaL,UAAWU,IACjD,kBAAC,GAAD,CACEN,OAAK,EACLC,KAAK,kBACLL,UAAWW,IAEb,kBAAC,GAAD,CAAcP,OAAK,EAACC,KAAK,gBAAgBL,UAAWY,IACpD,kBAAC,GAAD,CACER,OAAK,EACLC,KAAK,kBACLL,UAAWa,IAEb,kBAAC,GAAD,CAAcT,OAAK,EAACC,KAAK,iBAAiBL,UAAWc,IACrD,kBAAC,GAAD,CAAcV,OAAK,EAACC,KAAK,SAASL,UAAWe,KAC7C,kBAAC,GAAD,CAAcX,OAAK,EAACC,KAAK,aAAaL,UAAWgB,KACjD,kBAAC,IAAD,CAAOhB,UAAWH,Q,4CCvCtBjF,GAAe,GCSfA,GAAe,CACjBlG,MAAOO,aAAagM,QAAQ,SAC5BxL,gBAAiB,KACjBC,SAAS,EACT8E,KAAM,MCLJI,GAAe,CACnBR,QAAS,KACT8C,SAAU,GACVQ,MAAO,GACPhI,SAAS,EACTmB,MAAO,ICJH+D,GAAe,CACjB0E,MAAM,GACN7I,KAAM,KACNf,SAAS,EACTmB,MAAO,ICTIqK,8BAAgB,CAC3BrJ,MJHW,WAAsC,IAA7BvC,EAA4B,uDAArBsF,GAAcuG,EAAO,uCACxC7M,EAAkB6M,EAAlB7M,KAAMC,EAAY4M,EAAZ5M,QAEd,OAAQD,GACN,IpCRmB,YoCSjB,MAAM,GAAN,oBAAWgB,GAAX,CAAkBf,IACpB,IpCTsB,eoCUpB,OAAOe,EAAM8L,QAAO,SAAAvJ,GAAK,OAAIA,EAAMzD,KAAOG,KAC5C,QACE,OAAOe,IILXC,KHUW,WAAwC,IAA9BD,EAA6B,uDAAtBsF,GAAcuG,EAAQ,uCAC3C7M,EAAiB6M,EAAjB7M,KAAMC,EAAW4M,EAAX5M,QAEb,OAAOD,GACH,IrClBmB,cqCmBf,sBACOgB,EADP,CAEIG,iBAAiB,EACjBC,SAAS,EACT8E,KAAMjG,IAGd,IrC5BwB,mBqC6BxB,IrCzBqB,gBqC2BjB,OADAU,aAAaoM,QAAQ,QAAS9M,EAAQG,OAC/B,eACAY,EADP,GAEOf,EAFP,CAGIkB,iBAAiB,EACjBC,SAAS,IAGjB,IrCrCqB,gBqCsCrB,IrCpCkB,aqCqClB,IrCnCkB,aqCoClB,IrCnCc,SqCoCd,IrC5BuB,kBqC8BnB,OADAT,aAAaqM,WAAW,SACxB,eACOhM,EADP,CAEIZ,MAAO,KACPe,iBAAiB,EACjBC,SAAS,IAEjB,QACA,OAAOJ,IG5CX8E,QFSW,WAAyC,IAA/B9E,EAA8B,uDAAtBsF,GAAcuG,EAAQ,uCAC7C7M,EAAkB6M,EAAlB7M,KAAMC,EAAY4M,EAAZ5M,QAEd,OAAQD,GACN,ItCbuB,csCcvB,ItCV0B,iBsCWxB,OAAO,eACFgB,EADL,CAEE8E,QAAS7F,EACTmB,SAAS,IAEb,ItCnBwB,esCoBtB,OAAO,eACFJ,EADL,CAEE4H,SAAU3I,EACVmB,SAAS,IAEb,ItCrByB,gBsCsBvB,OAAO,eACFJ,EADL,CAEEuB,MAAOtC,EACPmB,SAAS,EACT0E,QAAS,OAEb,ItC3ByB,gBsC4BvB,OAAO,eACF9E,EADL,CAEE8E,QAAS,KACTsD,MAAO,KAEX,ItCrCqB,YsCsCnB,OAAO,eACFpI,EADL,CAEEoI,MAAOnJ,EACPmB,SAAS,IAEb,ItC1CoB,WsC2ClB,OAAO,eACFJ,EADL,CAEEoI,MAAO,KAEX,QACE,OAAOpI,IElDTmB,KDQW,WAAwC,IAA/BnB,EAA8B,uDAAtBsF,GAAcuG,EAAQ,uCAC1C7M,EAAkB6M,EAAlB7M,KAAMC,EAAY4M,EAAZ5M,QAEd,OAAQD,GACN,IvCLmB,YuCMjB,OAAO,eACFgB,EADL,CAEEgK,MAAO/K,EACPmB,SAAS,IAEb,IvCVkB,WuCWhB,OAAO,eACFJ,EADL,CAEEmB,KAAMlC,EACNmB,SAAS,IAEb,IvCZkB,WuCahB,OAAO,eACFJ,EADL,CAEEgK,MAAM,CAAE/K,GAAH,oBAAee,EAAMgK,QAC1B5J,SAAS,IAEb,IvCnBqB,cuCoBnB,OAAO,eACFJ,EADL,CAEEgK,MAAOhK,EAAMgK,MAAM8B,QAAO,SAAC3K,GAAD,OAAUA,EAAK8C,MAAQhF,KACjDmB,SAAS,IAEb,IvC3BoB,auC4BlB,OAAO,eACFJ,EADL,CAEEuB,MAAOtC,EACPmB,SAAS,IAEb,IvChCsB,euCiCpB,OAAO,eACFJ,EADL,CAEEgK,MAAOhK,EAAMgK,MAAMvH,KAAI,SAACtB,GAAD,OACrBA,EAAK8C,MAAQhF,EAAQH,GAArB,eAA+BqC,EAA/B,CAAqCmI,MAAOrK,EAAQqK,QAAUnI,KAEhEf,SAAS,IAEb,IvCrCqB,cuCsCnB,OAAO,eACFJ,EADL,CAEEmB,KAAK,eAAMnB,EAAMmB,KAAb,CAAmBoI,SAAUtK,IACjCmB,SAAS,IAEb,IvC1CwB,iBuC2CtB,OAAO,eACFJ,EADL,CAEEmB,KAAK,eACAnB,EAAMmB,KADP,CAEFoI,SAAUvJ,EAAMmB,KAAKoI,SAASuC,QAC5B,SAACzB,GAAD,OAAaA,EAAQpG,MAAQhF,OAGjCmB,SAAS,IAEb,QACE,OAAOJ,MEvETiM,GAAa,CAACC,MAQLC,GANDC,uBACZC,GALmB,GAOnBC,+BAAoBC,mBAAe,WAAf,EAAmBN,MCArCtM,aAAaP,OACfD,EAAaQ,aAAaP,OAG5B,IAkBeoN,GAlBH,WAIV,OAHArH,qBAAU,WACRgH,GAAMtN,SAASY,OACf,IAEA,kBAAC,IAAD,CAAU0M,MAAOA,IACf,kBAAC,IAAD,KACE,kBAAC,WAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOrB,OAAK,EAACC,KAAK,IAAIL,UAAW+B,IACjC,kBAAC,IAAD,CAAO/B,UAAWG,UCvB9B6B,IAAS9B,OACP,kBAAC,IAAM+B,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.32d40c7f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.f22e482e.gif\";","import { v4 as uuidv4 } from \"uuid\";\r\nimport { SET_ALERT, REMOVE_ALERT } from \"./types\";\r\n\r\nexport const setAlert = (msg, alertType, timeout = 5000) => (dispatch) => {\r\n  const id = uuidv4();\r\n  dispatch({\r\n    type: SET_ALERT,\r\n    payload: { msg, alertType, id },\r\n  });\r\n\r\n  setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), timeout);\r\n};\r\n","export const SET_ALERT = 'SET_ALERT';\r\nexport const REMOVE_ALERT = \"REMOVE_ALERT\";\r\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\r\nexport const USER_LOADED = \"USER_LOADED\";\r\nexport const AUTH_ERROR = \"AUTH_ERROR\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGOUT = \"LOGOUT\";\r\nexport const GET_PROFILE = \"GET_PROFILE\";\r\nexport const GET_PROFILES = \"GET_PROFILES\";\r\nexport const GET_REPOS = \"GET_REPOS\";\r\nexport const NO_REPOS = \"NO_REPOS\";\r\nexport const UPDATE_PROFILE = \"UPDATE_PROFILE\";\r\nexport const PROFILE_ERROR = \"PROFILE_ERROR\";\r\nexport const CLEAR_PROFILE = \"CLEAR_PROFILE\";\r\nexport const ACCOUNT_DELETED = \"ACCOUNT_DELETED\";\r\nexport const GET_POSTS = 'GET_POSTS';\r\nexport const GET_POST = \"GET_POST\";\r\nexport const POST_ERROR = \"POST_ERROR\";\r\nexport const UPDATE_LIKES = \"UPDATE_LIKES\";\r\nexport const DELETE_POST = \"DELETE_POST\";\r\nexport const ADD_POST = \"ADD_POST\";\r\nexport const ADD_COMMENT = \"ADD_COMMENT\";\r\nexport const REMOVE_COMMENT = \"REMOVE_COMMENT\";\r\n","import axios from 'axios';\r\n\r\nconst setAuthToken = token => {\r\n    if(token){\r\n        axios.defaults.headers.common['x-auth-token'] = token;\r\n    }else{\r\n        delete axios.defaults.headers.common['x-auth-token'];\r\n    }\r\n}\r\n\r\nexport default setAuthToken;","import axios from 'axios';\r\nimport {setAlert} from './alert';\r\nimport {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n    CLEAR_PROFILE\r\n} from './types';\r\nimport setAuthToken from '../utils/setAuthToken';\r\n\r\n// Load user\r\nexport const loadUser = () => async dispatch => {\r\n    if(localStorage.token){\r\n        setAuthToken(localStorage.token);\r\n    }\r\n\r\n    try {\r\n        const res = await axios.get('/api/auth');\r\n\r\n        dispatch({\r\n            type:USER_LOADED,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: AUTH_ERROR\r\n        });\r\n    }\r\n}\r\n\r\n// Register User\r\nexport const register = ({ name, email, password }) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-type': 'application/json'\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({ name, email, password });\r\n\r\n    try {\r\n        const res = await axios.post('/api/users', body, config);\r\n\r\n        dispatch({\r\n            type: REGISTER_SUCCESS,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(loadUser());\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n        if(errors){\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n        }\r\n        dispatch({\r\n            type: REGISTER_FAIL\r\n        });\r\n    }\r\n}\r\n\r\n// Login User\r\nexport const login = ( email, password ) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-type': 'application/json'\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({ email, password });\r\n\r\n    try {\r\n        const res = await axios.post('/api/auth', body, config);\r\n\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(loadUser());\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n        if(errors){\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n        }\r\n        dispatch({\r\n            type: LOGIN_FAIL\r\n        });\r\n    }\r\n};\r\n\r\n// Logout / Clear profile\r\nexport const logout = () => dispatch => {\r\n    dispatch({\r\n      type: CLEAR_PROFILE,\r\n    });\r\n    dispatch({\r\n        type: LOGOUT\r\n    });\r\n\r\n}","import React, { Fragment } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { logout } from '../../actions/auth';\r\n\r\nconst Navbar = ({ auth: { isAuthenticated, loading }, logout }) => {\r\n  const authLinks = (\r\n    <ul>\r\n      <li>\r\n        <Link to=\"/profiles\">\r\n          <i className=\"fas fa-user-secret\"></i>{\" \"}\r\n          <span className=\"hide-sm\">Developers</span>\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/posts\">\r\n          <i className=\"fas fa-comment\"></i>{\" \"}\r\n          <span className=\"hide-sm\">Posts</span>\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/dashboard\">\r\n          <i className=\"fas fa-user\" />{\" \"}\r\n          <span className=\"hide-sm\">Dashboard</span>\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link onClick={logout} to=\"/\">\r\n          <i className=\"fas fa-sign-out-alt\" />{\" \"}\r\n          <span className=\"hide-sm\">Logout</span>\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  );\r\n\r\n  const guestLinks = (\r\n    <ul>\r\n      <li>\r\n        <Link to=\"/profiles\">Developers</Link>\r\n      </li>\r\n      <li>\r\n        <a href=\"/register\">Register</a>\r\n      </li>\r\n      <li>\r\n        <a href=\"/login\">Login</a>\r\n      </li>\r\n    </ul>\r\n  );\r\n\r\n  return (\r\n    <nav className=\"navbar bg-dark\">\r\n      <h1>\r\n        <a href=\"/\">\r\n          <i className=\"fas fa-code\"></i> ConnectSphere\r\n        </a>\r\n      </h1>\r\n  { !loading && (<Fragment>{ isAuthenticated ? authLinks : guestLinks }</Fragment>) }\r\n    </nav>\r\n  );\r\n};\r\n\r\nNavbar.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout})(Navbar);","import React from 'react'\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Landing = ({isAuthenticated}) => {\r\n  if(isAuthenticated){\r\n    return <Redirect to='/dashboard' />\r\n  }\r\n    return (\r\n      <section className=\"landing\">\r\n        <div className=\"dark-overlay\">\r\n          <div className=\"landing-inner\">\r\n            <h1 className=\"x-large\">Developer Connector</h1>\r\n            <p className=\"lead\">\r\n              Create a developer profile/portfolio, share posts and get help\r\n              from other developers\r\n            </p>\r\n            <div className=\"buttons\">\r\n              <Link to=\"/register\" className=\"btn btn-primary\">\r\n                Sign Up\r\n              </Link>\r\n              <Link to=\"/login\" className=\"btn btn-light\">\r\n                Login\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n}\r\n\r\nLanding.propTypes = {\r\n  isAuthenticated: PropTypes.bool\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n})\r\n\r\nexport default connect(mapStateToProps)(Landing)","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { setAlert } from '../../actions/alert';\r\nimport { register } from \"../../actions/auth\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// import axios from 'axios';\r\n\r\nconst Register = ({ setAlert, register, isAuthenticated }) => {\r\n    const [ formData, setFormData ] = useState({\r\n        name:'',\r\n        email:'',\r\n        password:'',\r\n        password2:''\r\n    });\r\n\r\n    const { name, email, password, password2 } = formData;\r\n\r\n    const onChange = (e) =>\r\n      setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = async e => {\r\n        e.preventDefault();\r\n        if(password !== password2){\r\n            setAlert('password not match!', 'danger');\r\n        }else{\r\n            register({ name, email, password });\r\n        }\r\n    }\r\n\r\n    if(isAuthenticated){\r\n      return <Redirect to=\"/dashboard\" />\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <h1 className=\"large text-primary\">Sign Up</h1>\r\n        <p className=\"lead\">\r\n          <i className=\"fas fa-user\"></i> Create Your Account\r\n        </p>\r\n        <form className=\"form\" onSubmit={(e) => onSubmit(e)}>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Name\"\r\n              name=\"name\"\r\n              value={name}\r\n              onChange={(e) => onChange(e)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"email\"\r\n              placeholder=\"Email Address\"\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={(e) => onChange(e)}\r\n              required\r\n            />\r\n            <small className=\"form-text\">\r\n              This site uses Gravatar so if you want a profile image, use a\r\n              Gravatar email\r\n            </small>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              name=\"password\"\r\n              minLength=\"6\"\r\n              value={password}\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Confirm Password\"\r\n              name=\"password2\"\r\n              minLength=\"6\"\r\n              value={password2}\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n          </div>\r\n          <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\r\n        </form>\r\n        <p className=\"my-1\">\r\n          Already have an account? <Link to=\"/login\">Sign In</Link>\r\n        </p>\r\n      </>\r\n    );\r\n}\r\n\r\nRegister.propTypes = {\r\n  setAlert: PropTypes.func.isRequired,\r\n  register: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps, { setAlert, register })(Register);\r\n","import React, { useState } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { login } from '../../actions/auth';\r\n\r\nconst Login = ({ login, isAuthenticated }) => {\r\n    const [formData, setFormData] = useState({\r\n      email: \"\",\r\n      password: \"\",\r\n    });\r\n\r\n    const { email, password } = formData;\r\n\r\n    const onChange = (e) =>\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = async e => {\r\n        e.preventDefault();\r\n         login(email, password);\r\n    }\r\n\r\n    // Redirect if logged in\r\n    if(isAuthenticated){\r\n      return <Redirect to=\"/dashboard\" />\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <h1 className=\"large text-primary\">Sign In</h1>\r\n        <p className=\"lead\">\r\n          <i className=\"fas fa-user\"></i> Sign into Your Account\r\n        </p>\r\n        <form className=\"form\" onSubmit={(e) => onSubmit(e)}>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"email\"\r\n              placeholder=\"Email Address\"\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={(e) => onChange(e)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n          </div>\r\n          <input type=\"submit\" className=\"btn btn-primary\" value=\"Login\" />\r\n        </form>\r\n        <p className=\"my-1\">\r\n          Don't have an account? <Link to=\"/register\">Sign Up</Link>\r\n        </p>\r\n      </>\r\n    );\r\n}\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool,\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Alert = ({ alerts }) =>\r\n  alerts !== null &&\r\n  alerts.length > 0 &&\r\n  alerts.map((alert) => (\r\n    <div key={alert.id} className={`alert alert-${alert.alertType}`}>\r\n      {alert.msg}\r\n    </div>\r\n  ));\r\n\r\nAlert.propTypes = {\r\n  alerts: PropTypes.array.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  alerts: state.alert,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Alert);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst DashboardActions = () => {\r\n  return (\r\n    <div className=\"dash-buttons\">\r\n      <Link to=\"/edit-profile\" className=\"btn btn-light\">\r\n        <i className=\"fas fa-user-circle text-primary\" /> Edit Profile\r\n      </Link>\r\n      <Link to=\"/add-experience\" className=\"btn btn-light\">\r\n        <i className=\"fab fa-black-tie text-primary\" /> Add Experience\r\n      </Link>\r\n      <Link to=\"/add-education\" className=\"btn btn-light\">\r\n        <i className=\"fas fa-graduation-cap text-primary\" /> Add Education\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardActions;\r\n","import React, { Fragment } from \"react\";\r\nimport spinner from \"./spinner.gif\";\r\n\r\nexport default () => (\r\n  <Fragment>\r\n    <img\r\n      src={spinner}\r\n      style={{ width: \"100px\", margin: \"auto\", display: \"block\" }}\r\n      alt=\"Loading...\"\r\n    />\r\n  </Fragment>\r\n);\r\n","import axios from \"axios\";\r\nimport { setAlert } from \"./alert\";\r\n\r\nimport {\r\n  GET_PROFILE,\r\n  GET_PROFILES,\r\n  PROFILE_ERROR,\r\n  UPDATE_PROFILE,\r\n  CLEAR_PROFILE,\r\n  ACCOUNT_DELETED,\r\n  GET_REPOS,\r\n  NO_REPOS,\r\n} from \"./types\";\r\n\r\n// Get current users profile\r\nexport const getCurrentProfile = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(\"/api/profile/me\");\r\n\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Get all profiles\r\nexport const getProfiles = () => async (dispatch) => {\r\n  dispatch({ type: CLEAR_PROFILE });\r\n\r\n  try {\r\n    const res = await axios.get(\"/api/profile\");\r\n\r\n    dispatch({\r\n      type: GET_PROFILES,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Get profile by ID\r\nexport const getProfileById = (userId) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/profile/user/${userId}`);\r\n\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Get Github repos\r\nexport const getGithubRepos = (username) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/profile/github/${username}`);\r\n\r\n    dispatch({\r\n      type: GET_REPOS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: NO_REPOS,\r\n    });\r\n  }\r\n};\r\n\r\n// Create or update profile\r\nexport const createProfile = (formData, history, edit = false) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const res = await axios.post(\"/api/profile\", formData, config);\r\n\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert(edit ? \"Profile Updated\" : \"Profile Created\", \"success\"));\r\n\r\n    if (!edit) {\r\n      history.push(\"/dashboard\");\r\n    }\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Add Experience\r\nexport const addExperience = (formData, history) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const res = await axios.put(\"/api/profile/experience\", formData, config);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert(\"Experience Added\", \"success\"));\r\n\r\n    history.push(\"/dashboard\");\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Add Education\r\nexport const addEducation = (formData, history) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const res = await axios.put(\"/api/profile/education\", formData, config);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert(\"Education Added\", \"success\"));\r\n\r\n    history.push(\"/dashboard\");\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Delete experience\r\nexport const deleteExperience = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.delete(`/api/profile/experience/${id}`);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert(\"Experience Removed\", \"success\"));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Delete education\r\nexport const deleteEducation = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.delete(`/api/profile/education/${id}`);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert(\"Education Removed\", \"success\"));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Delete account & profile\r\nexport const deleteAccount = () => async (dispatch) => {\r\n  if (window.confirm(\"Are you sure? This can NOT be undone!\")) {\r\n    try {\r\n      await axios.delete(\"/api/profile\");\r\n\r\n      dispatch({ type: CLEAR_PROFILE });\r\n      dispatch({ type: ACCOUNT_DELETED });\r\n\r\n      dispatch(setAlert(\"Your account has been permanently deleted\"));\r\n    } catch (err) {\r\n      dispatch({\r\n        type: PROFILE_ERROR,\r\n        payload: { msg: err.response.statusText, status: err.response.status },\r\n      });\r\n    }\r\n  }\r\n};\r\n","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Moment from \"react-moment\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteExperience } from \"../../actions/profile\";\r\n\r\nconst Experience = ({ experience, deleteExperience }) => {\r\n  // Safety check for undefined or empty experience array\r\n  if (!Array.isArray(experience) || experience.length === 0) {\r\n    return (\r\n      <Fragment>\r\n        <h2 className=\"my-2\">Experience Credentials</h2>\r\n        <p>No experience credentials added yet.</p>\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n  const experiences = experience.map((exp) => (\r\n    <tr key={exp._id}>\r\n      <td>{exp.company}</td>\r\n      <td className=\"hide-sm\">{exp.title}</td>\r\n      <td>\r\n        <Moment format=\"DD/MM/YYYY\">{exp.from}</Moment> -{\" \"}\r\n        {exp.to === null ? (\r\n          \" Now\"\r\n        ) : (\r\n          <Moment format=\"DD/MM/YYYY\">{exp.to}</Moment>\r\n        )}\r\n      </td>\r\n      <td>\r\n        <button\r\n          onClick={() => deleteExperience(exp._id)}\r\n          className=\"btn btn-danger\"\r\n        >\r\n          Delete\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  ));\r\n\r\n  return (\r\n    <Fragment>\r\n      <h2 className=\"my-2\">Experience Credentials</h2>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Company</th>\r\n            <th className=\"hide-sm\">Title</th>\r\n            <th className=\"hide-sm\">Years</th>\r\n            <th className=\"hide-sm\">Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{experiences}</tbody>\r\n      </table>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nExperience.propTypes = {\r\n  experience: PropTypes.array.isRequired,\r\n  deleteExperience: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteExperience })(Experience);\r\n","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Moment from \"react-moment\";\r\nimport moment from \"moment\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteEducation } from \"../../actions/profile\";\r\n\r\nconst Education = ({ education, deleteEducation }) => {\r\n  // Safe check\r\n  if (!Array.isArray(education) || education.length === 0) {\r\n    return (\r\n      <Fragment>\r\n        <h2 className=\"my-2\">Education Credentials</h2>\r\n        <p>No education credentials added yet.</p>\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n  const educations = education.map((edu) => (\r\n    <tr key={edu._id}>\r\n      <td>{edu.school}</td>\r\n      <td className=\"hide-sm\">{edu.degree}</td>\r\n      <td>\r\n        <Moment format=\"DD/MM/YYYY\">{moment.utc(edu.from)}</Moment> -{\" \"}\r\n        {edu.to === null ? (\r\n          \" Now\"\r\n        ) : (\r\n          <Moment format=\"DD/MM/YYYY\">{moment.utc(edu.to)}</Moment>\r\n        )}\r\n      </td>\r\n      <td>\r\n        <button\r\n          onClick={() => deleteEducation(edu._id)}\r\n          className=\"btn btn-danger\"\r\n        >\r\n          Delete\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  ));\r\n\r\n  return (\r\n    <Fragment>\r\n      <h2 className=\"my-2\">Education Credentials</h2>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>School</th>\r\n            <th className=\"hide-sm\">Degree</th>\r\n            <th className=\"hide-sm\">Years</th>\r\n            <th className=\"hide-sm\">Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{educations}</tbody>\r\n      </table>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nEducation.propTypes = {\r\n  education: PropTypes.array.isRequired,\r\n  deleteEducation: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteEducation })(Education);\r\n","import React, { Fragment, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport DashboardActions from \"./DashboardActions\";\r\nimport Spinner from '../layout/Spinner';\r\nimport Experience from \"./Experience\";\r\nimport Education from \"./Education\";\r\nimport { getCurrentProfile, deleteAccount } from \"../../actions/profile\";\r\n\r\nconst Dashboard = ({\r\n  getCurrentProfile,\r\n  deleteAccount,\r\n  auth: { user },\r\n  profile: { profile, loading },\r\n}) => {\r\n  useEffect(() => {\r\n    getCurrentProfile();\r\n  }, [getCurrentProfile]);\r\n\r\n  return loading && profile === null ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">Dashboard</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\" /> Welcome {user && user.name}\r\n      </p>\r\n      {profile !== null ? (\r\n        <Fragment>\r\n          <DashboardActions />\r\n          <Experience experience={profile.experience} />\r\n          <Education education={profile.education} />\r\n\r\n          <div className=\"my-2\">\r\n            <button className=\"btn btn-danger\" onClick={() => deleteAccount()}>\r\n              <i className=\"fas fa-user-minus\" style={{marginRight:'5px'}} />{\"  \"} Delete My Account\r\n            </button>\r\n          </div>\r\n        </Fragment>\r\n      ) : (\r\n        <Fragment>\r\n          <p>You have not yet setup a profile, please add some info</p>\r\n          <Link to=\"/create-profile\" className=\"btn btn-primary my-1\">\r\n            Create Profile\r\n          </Link>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nDashboard.propTypes = {\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  deleteAccount: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  profile: state.profile,\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    getCurrentProfile,\r\n    deleteAccount\r\n  })(Dashboard);","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProfile, getCurrentProfile } from \"../../actions/profile\";\r\n\r\nconst initialState = {\r\n  company: \"\",\r\n  website: \"\",\r\n  location: \"\",\r\n  status: \"\",\r\n  skills: \"\",\r\n  githubusername: \"\",\r\n  bio: \"\",\r\n  twitter: \"\",\r\n  facebook: \"\",\r\n  linkedin: \"\",\r\n  youtube: \"\",\r\n  instagram: \"\",\r\n  usegithubavatar: false,\r\n};\r\n\r\nconst CreateProfile = ({\r\n  profile: { profile, loading },\r\n  createProfile,\r\n  getCurrentProfile,\r\n  history,\r\n}) => {\r\n  const [formData, setFormData] = useState(initialState);\r\n\r\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!profile) getCurrentProfile();\r\n    if (!loading && profile) {\r\n      const profileData = { ...initialState };\r\n      for (const key in profile) {\r\n        if (key in profileData) profileData[key] = profile[key];\r\n      }\r\n      if (Array.isArray(profileData.skills))\r\n        profileData.skills = profileData.skills.join(\", \");\r\n      setFormData(profileData);\r\n    }\r\n  }, [loading, getCurrentProfile, profile]);\r\n\r\n  const {\r\n    company,\r\n    website,\r\n    location,\r\n    status,\r\n    skills,\r\n    githubusername,\r\n    bio,\r\n    twitter,\r\n    facebook,\r\n    linkedin,\r\n    youtube,\r\n    instagram,\r\n    usegithubavatar,\r\n  } = formData;\r\n\r\n  const onChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    let { name, value, checked } = e.target;\r\n    if (name === \"usegithubavatar\") value = checked;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    createProfile(formData, history, profile ? true : false);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">Edit Your Profile</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\" /> Add some changes to your profile\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form className=\"form\" onSubmit={onSubmit}>\r\n        <div className=\"form-group\">\r\n          <select name=\"status\" value={status} onChange={onChange}>\r\n            <option>* Select Professional Status</option>\r\n            <option value=\"Developer\">Developer</option>\r\n            <option value=\"Junior Developer\">Junior Developer</option>\r\n            <option value=\"Senior Developer\">Senior Developer</option>\r\n            <option value=\"Manager\">Manager</option>\r\n            <option value=\"Student or Learning\">Student or Learning</option>\r\n            <option value=\"Instructor\">Instructor or Teacher</option>\r\n            <option value=\"Intern\">Intern</option>\r\n            <option value=\"Other\">Other</option>\r\n          </select>\r\n          <small className=\"form-text\">\r\n            Give us an idea of where you are at in your career\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Company\"\r\n            name=\"company\"\r\n            value={company}\r\n            onChange={onChange}\r\n          />\r\n          <small className=\"form-text\">\r\n            Could be your own company or one you work for\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Website\"\r\n            name=\"website\"\r\n            value={website}\r\n            onChange={onChange}\r\n          />\r\n          <small className=\"form-text\">\r\n            Could be your own or a company website\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Location\"\r\n            name=\"location\"\r\n            value={location}\r\n            onChange={onChange}\r\n          />\r\n          <small className=\"form-text\">\r\n            City & state suggested (eg. Boston, MA)\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"* Skills\"\r\n            name=\"skills\"\r\n            value={skills}\r\n            onChange={onChange}\r\n          />\r\n          <small className=\"form-text\">\r\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Github Username\"\r\n            name=\"githubusername\"\r\n            value={githubusername}\r\n            onChange={onChange}\r\n          />\r\n          <small className=\"form-text\">\r\n            If you want your latest repos and a Github link, include your\r\n            username\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"checkbox\"\r\n            name=\"usegithubavatar\"\r\n            checked={usegithubavatar}\r\n            onChange={onChange}\r\n          />\r\n          <label htmlFor=\"usegithubavatar\">\r\n            {\" \"}\r\n            Use GitHub avatar image (requires a valid GitHub account)\r\n          </label>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <textarea\r\n            placeholder=\"A short bio of yourself\"\r\n            name=\"bio\"\r\n            value={bio}\r\n            onChange={onChange}\r\n          />\r\n          <small className=\"form-text\">Tell us a little about yourself</small>\r\n        </div>\r\n\r\n        <div className=\"my-2\">\r\n          <button\r\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\r\n            type=\"button\"\r\n            className=\"btn btn-light\"\r\n          >\r\n            Add Social Network Links\r\n          </button>\r\n          <span>Optional</span>\r\n        </div>\r\n\r\n        {displaySocialInputs && (\r\n          <Fragment>\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-twitter fa-2x\" />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Twitter URL\"\r\n                name=\"twitter\"\r\n                value={twitter}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-facebook fa-2x\" />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Facebook URL\"\r\n                name=\"facebook\"\r\n                value={facebook}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-youtube fa-2x\" />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"YouTube URL\"\r\n                name=\"youtube\"\r\n                value={youtube}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-linkedin fa-2x\" />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Linkedin URL\"\r\n                name=\"linkedin\"\r\n                value={linkedin}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-instagram fa-2x\" />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Instagram URL\"\r\n                name=\"instagram\"\r\n                value={instagram}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n\r\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nCreateProfile.propTypes = {\r\n  createProfile: PropTypes.func.isRequired,\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(\r\n  withRouter(CreateProfile)\r\n);\r\n","import React, { useState, Fragment, useEffect } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProfile, getCurrentProfile } from \"../../actions/profile\";\r\n\r\nconst EditProfile = ({\r\n  profile: { profile, loading },\r\n  createProfile,\r\n  getCurrentProfile,\r\n  history,\r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    company: \"\",\r\n    website: \"\",\r\n    location: \"\",\r\n    status: \"\",\r\n    skills: \"\",\r\n    githubusername: \"\",\r\n    bio: \"\",\r\n    twitter: \"\",\r\n    facebook: \"\",\r\n    linkedin: \"\",\r\n    youtube: \"\",\r\n    instagram: \"\",\r\n    usegithubavatar: false\r\n  });\r\n\r\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n\r\n  useEffect(()=> {\r\n      getCurrentProfile();\r\n\r\n      setFormData({\r\n        company: loading || !profile.company ? '' : profile.company,\r\n        website: loading || !profile.website ? '' : profile.website,\r\n        location: loading || !profile.location ? '' : profile.location,\r\n        status: loading || !profile.status ? '' : profile.status,\r\n        skills: loading || !profile.skills ? '' : profile.skills.join(','),\r\n        githubusername: loading || !profile.githubusername ? '' : profile.githubusername,\r\n        usegithubavatar: loading || !profile.usegithubavatar ? '' : profile.usegithubavatar,\r\n        bio: loading || !profile.bio ? '' : profile.bio,\r\n        twitter: loading || !profile.social ? '' : profile.social.twitter,\r\n        facebook: loading || !profile.social ? '' : profile.social.facebook,\r\n        linkedin: loading || !profile.social ? '' : profile.social.linkedin,\r\n        youtube: loading || !profile.social ? '' : profile.social.youtube,\r\n        instagram: loading || !profile.social ? '' : profile.social.instagram,\r\n      });\r\n  },[loading, getCurrentProfile]);\r\n\r\n  const {\r\n    company,\r\n    website,\r\n    location,\r\n    status,\r\n    skills,\r\n    githubusername,\r\n    bio,\r\n    twitter,\r\n    facebook,\r\n    linkedin,\r\n    youtube,\r\n    instagram,\r\n    usegithubavatar\r\n  } = formData;\r\n\r\n  const onChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    let { name, value, checked } = e.target;\r\n    if (name === \"usegithubavatar\") value = checked;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    createProfile(formData, history, true);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">Create Your Profile</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\"></i> Let's get some information to make your\r\n        profile stand out\r\n      </p>\r\n      <small style={{ color: \"#ff0000\" }}>* = required field</small>\r\n      <form className=\"form\" onSubmit={(e) => onSubmit(e)}>\r\n        <div className=\"form-group\">\r\n          <select name=\"status\" value={status} onChange={(e) => onChange(e)}>\r\n            <option value=\"0\">* Select Professional Status</option>\r\n            <option value=\"Developer\">Developer</option>\r\n            <option value=\"Junior Developer\">Junior Developer</option>\r\n            <option value=\"Senior Developer\">Senior Developer</option>\r\n            <option value=\"Manager\">Manager</option>\r\n            <option value=\"Student or Learning\">Student or Learning</option>\r\n            <option value=\"Instructor\">Instructor or Teacher</option>\r\n            <option value=\"Intern\">Intern</option>\r\n            <option value=\"Other\">Other</option>\r\n          </select>\r\n          <small className=\"form-text\">\r\n            Give us an idea of where you are at in your career\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Company\"\r\n            name=\"company\"\r\n            value={company}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className=\"form-text\">\r\n            Could be your own company or one you work for\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Website\"\r\n            name=\"website\"\r\n            value={website}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className=\"form-text\">\r\n            Could be your own or a company website\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Location\"\r\n            name=\"location\"\r\n            value={location}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className=\"form-text\">\r\n            City & state suggested (eg. Boston, MA)\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"* Skills\"\r\n            name=\"skills\"\r\n            value={skills}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className=\"form-text\">\r\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Github Username\"\r\n            name=\"githubusername\"\r\n            value={githubusername}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className=\"form-text\">\r\n            If you want your latest repos and a Github link, include your\r\n            username\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"checkbox\"\r\n            name=\"usegithubavatar\"\r\n            checked={usegithubavatar}\r\n            onChange={onChange}\r\n          />\r\n          <label htmlFor=\"usegithubavatar\">\r\n            {\" \"}\r\n            Use GitHub avatar image (requires a valid GitHub account)\r\n          </label>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <textarea\r\n            placeholder=\"A short bio of yourself\"\r\n            name=\"bio\"\r\n            value={bio}\r\n            onChange={(e) => onChange(e)}\r\n          ></textarea>\r\n          <small className=\"form-text\">Tell us a little about yourself</small>\r\n        </div>\r\n\r\n        <div className=\"my-2\">\r\n          <button\r\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\r\n            type=\"button\"\r\n            className=\"btn btn-light\"\r\n          >\r\n            Add Social Network Links\r\n          </button>\r\n          <span>Optional</span>\r\n        </div>\r\n\r\n        {displaySocialInputs && (\r\n          <Fragment>\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-twitter fa-2x\"></i>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Twitter URL\"\r\n                name=\"twitter\"\r\n                value={twitter}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-facebook fa-2x\"></i>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Facebook URL\"\r\n                name=\"facebook\"\r\n                value={facebook}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-youtube fa-2x\"></i>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"YouTube URL\"\r\n                name=\"youtube\"\r\n                value={youtube}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-linkedin fa-2x\"></i>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Linkedin URL\"\r\n                name=\"linkedin\"\r\n                value={linkedin}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-instagram fa-2x\"></i>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Instagram URL\"\r\n                name=\"instagram\"\r\n                value={instagram}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n\r\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nEditProfile.propTypes = {\r\n  createProfile: PropTypes.func.isRequired,\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { createProfile, getCurrentProfile }\r\n)(withRouter(EditProfile));\r\n","import React, { Fragment, useState } from 'react';\r\nimport {Link, withRouter} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addExperience } from '../../actions/profile';\r\n\r\nconst AddExperience = ({ addExperience, history }) => {\r\n    const [formData, setFormData] = useState({\r\n      company: \"\",\r\n      title: \"\",\r\n      location: \"\",\r\n      from: \"\",\r\n      to: \"\",\r\n      current: false,\r\n      description: \"\",\r\n    });\r\n\r\n    const [toDateDisabled, toggleDisabled] = useState(false);\r\n\r\n    const {\r\n      company,\r\n      title,\r\n      location,\r\n      from,\r\n      to,\r\n      current,\r\n      description,\r\n    } = formData;\r\n\r\n    const onChange = (e) =>\r\n      setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    return (\r\n      <Fragment>\r\n        <h1 className=\"large text-primary\">Add An Experience</h1>\r\n        <p className=\"lead\">\r\n          <i className=\"fas fa-code-branch\" /> Add any developer/programming\r\n          positions that you have had in the past\r\n        </p>\r\n        <small style={{color:'#ff0000'}}>* = required field</small>\r\n        <form\r\n          className=\"form\"\r\n          onSubmit={(e) => {\r\n            e.preventDefault();\r\n            addExperience(formData, history);\r\n          }}\r\n        >\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"* Job Title\"\r\n              name=\"title\"\r\n              value={title}\r\n              onChange={(e) => onChange(e)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"* Company\"\r\n              name=\"company\"\r\n              value={company}\r\n              onChange={(e) => onChange(e)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Location\"\r\n              name=\"location\"\r\n              value={location}\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <h4>From Date</h4>\r\n            <input\r\n              type=\"date\"\r\n              name=\"from\"\r\n              value={from}\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <p>\r\n              <input\r\n                type=\"checkbox\"\r\n                name=\"current\"\r\n                checked={current}\r\n                value={current}\r\n                onChange={() => {\r\n                  setFormData({ ...formData, current: !current });\r\n                  toggleDisabled(!toDateDisabled);\r\n                }}\r\n              />{\" \"}\r\n              Current Job\r\n            </p>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <h4>To Date</h4>\r\n            <input\r\n              type=\"date\"\r\n              name=\"to\"\r\n              value={to}\r\n              onChange={(e) => onChange(e)}\r\n              disabled={toDateDisabled ? \"disabled\" : \"\"}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <textarea\r\n              name=\"description\"\r\n              cols=\"30\"\r\n              rows=\"5\"\r\n              placeholder=\"Job Description\"\r\n              value={description}\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n          </div>\r\n          <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n          <Link className=\"btn btn-light my-1\" to=\"/dashboard\">\r\n            Go Back\r\n          </Link>\r\n        </form>\r\n      </Fragment>\r\n    );\r\n}\r\n\r\nAddExperience.propTypes = {\r\n    addExperience: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default connect(null, { addExperience })(withRouter(AddExperience))\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { addEducation } from \"../../actions/profile\";\r\n\r\nconst AddEducation = ({ addEducation, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    school: \"\",\r\n    degree: \"\",\r\n    fieldofstudy: \"\",\r\n    from: \"\",\r\n    to: \"\",\r\n    current: false,\r\n    description: \"\",\r\n  });\r\n\r\n  const [toDateDisabled, toggleDisabled] = useState(false);\r\n\r\n  const {\r\n    school,\r\n    degree,\r\n    fieldofstudy,\r\n    from,\r\n    to,\r\n    current,\r\n    description,\r\n  } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">Add Your Education</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-code-branch\" /> Add any school or bootcamp that you\r\n        have attended\r\n      </p>\r\n      <small style={{color:'#ff0000'}}>* = required field</small>\r\n      <form\r\n        className=\"form\"\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          addEducation(formData, history);\r\n        }}\r\n      >\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"* School or Bootcamp\"\r\n            name=\"school\"\r\n            value={school}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"* Degree or Certificate\"\r\n            name=\"degree\"\r\n            value={degree}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Field of Study\"\r\n            name=\"fieldofstudy\"\r\n            value={fieldofstudy}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <h4>From Date</h4>\r\n          <input\r\n            type=\"date\"\r\n            name=\"from\"\r\n            value={from}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <p>\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"current\"\r\n              checked={current}\r\n              value={current}\r\n              onChange={() => {\r\n                setFormData({ ...formData, current: !current });\r\n                toggleDisabled(!toDateDisabled);\r\n              }}\r\n            />{\" \"}\r\n            Current School\r\n          </p>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <h4>To Date</h4>\r\n          <input\r\n            type=\"date\"\r\n            name=\"to\"\r\n            value={to}\r\n            onChange={(e) => onChange(e)}\r\n            disabled={toDateDisabled ? \"disabled\" : \"\"}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <textarea\r\n            name=\"description\"\r\n            cols=\"30\"\r\n            rows=\"5\"\r\n            placeholder=\"Program Description\"\r\n            value={description}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </div>\r\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nAddEducation.propTypes = {\r\n  addEducation: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addEducation })(withRouter(AddEducation));\r\n","import React, { Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom';\r\nimport Spinner from '../layout/Spinner';\r\n\r\nconst ProfileItem = ({\r\n  profile: {\r\n    user: { _id, name, avatar },\r\n    status,\r\n    company,\r\n    location,\r\n    skills,\r\n    loading\r\n  },\r\n}) => {\r\n  return (\r\n    <Fragment>\r\n      {loading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <Fragment>\r\n          <div className=\"profile bg-light\">\r\n            <img src={avatar} alt=\"\" className=\"round-img\" />\r\n            <div>\r\n              <h2>{name}</h2>\r\n              <p>\r\n                {status} {company && <span> at {company}</span>}{\" \"}\r\n              </p>\r\n              <p className=\"my-1\">{location && <span> at {location}</span>}</p>\r\n              <Link to={`/profile/${_id}`} className=\"btn btn-primary\">\r\n                View Profile\r\n              </Link>\r\n            </div>\r\n            <ul>\r\n              {skills.slice(0, 4).map((skill, index) => (\r\n                <li key={index} className=\"text-primary\">\r\n                  <i className=\"fas fa-check\"></i>\r\n                  {skill}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nProfileItem.propTypes = {\r\n    profile: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default ProfileItem\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport Spinner from '../layout/Spinner';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport ProfileItems from './ProfileItem';\r\nimport { getProfiles } from '../../actions/profile';\r\n\r\nconst Profiles = ({ getProfiles, profile:{ profiles, loading } }) => {\r\n    useEffect(()=>{\r\n        getProfiles();\r\n    },[getProfiles]);\r\n    return (\r\n      <Fragment>\r\n        {loading ? (\r\n          <Spinner />\r\n        ) : (\r\n          <Fragment>\r\n            <h1 className=\"large text-primary\">Developers</h1>\r\n            <p className=\"lead\">\r\n                <i className=\"fab fa-connectdevelop\"></i> Browse and Connect with Developers\r\n            </p>\r\n            <div className=\"profiles\">\r\n                {profiles.length > 0 ? (\r\n                    profiles.map(profile => (\r\n                        <ProfileItems key={profile._id} profile={profile} />\r\n                    ))\r\n                ) : <h4>No Profiles Found...</h4>}\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n      </Fragment>\r\n    );\r\n}\r\n\r\nProfiles.propTypes = {\r\n    getProfiles: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    profile: state.profile\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfiles })(Profiles)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst ProfileTop = ({\r\n  profile: {\r\n    status,\r\n    company,\r\n    location,\r\n    website,\r\n    social,\r\n    user: { name, avatar },\r\n  },\r\n}) => {\r\n  return (\r\n    <div className=\"profile-top bg-primary p-2\">\r\n      <img className=\"round-img my-1\" src={avatar} alt=\"\" />\r\n      <h1 className=\"large\">{name}</h1>\r\n      <p className=\"lead\">\r\n        {status} {company && <span> at {company}</span>}{\" \"}\r\n      </p>\r\n      <p>{location && <span>{location}</span>}</p>\r\n      <div className=\"icons my-1\">\r\n        {website && (\r\n          <a href={website} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <i className=\"fas fa-globe fa-2x\"></i>\r\n          </a>\r\n        )}\r\n        {social && social.twitter && (\r\n          <a href={social.twitter} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <i className=\"fab fa-twitter fa-2x\"></i>\r\n          </a>\r\n        )}\r\n        {social && social.facebook && (\r\n          <a href={social.facebook} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <i className=\"fab fa-facebook fa-2x\"></i>\r\n          </a>\r\n        )}\r\n        {social && social.linkedin && (\r\n          <a href={social.linkedin} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <i className=\"fab fa-linkedin fa-2x\"></i>\r\n          </a>\r\n        )}\r\n        {social && social.youtube && (\r\n          <a href={social.youtube} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <i className=\"fab fa-youtube fa-2x\"></i>\r\n          </a>\r\n        )}\r\n        {social && social.instagram && (\r\n          <a href={social.instagram} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <i className=\"fab fa-instagram fa-2x\"></i>\r\n          </a>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileTop.propTypes = {\r\n    profile: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default ProfileTop\r\n","import React, { Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst ProfileAbout = ({\r\n  profile: {\r\n    bio,\r\n    skills,\r\n    user: { name },\r\n  },\r\n}) => {\r\n  return (\r\n    <div className=\"profile-about bg-light p-2\">\r\n      {bio && (\r\n        <Fragment>\r\n          <h2 className=\"text-primary\">{name.trim().split(' ')[0]}'s Bio</h2>\r\n          <p>\r\n            {bio}\r\n          </p>\r\n          <div className=\"line\"></div>\r\n        </Fragment>\r\n      )}\r\n\r\n      <h2 className=\"text-primary\">Skill Set</h2>\r\n      <div className=\"skills\">\r\n        {skills.map((skill, index)=>(\r\n            <div key={index} className=\"p-1\">\r\n                <i className=\"fas fa-check\"></i> {skill}\r\n            </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileAbout.propTypes = {\r\n    profile: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default ProfileAbout\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Moment from \"react-moment\";\r\nimport moment from \"moment\";\r\n\r\nconst ProfileExperience = ({\r\n  experience: { company, title, location, current, to, from, description },\r\n}) => (\r\n  <div>\r\n    <h3 className=\"text-dark\">{company}</h3>\r\n    <p>\r\n      <Moment format=\"YYYY/MM/DD\">{moment.utc(from)}</Moment> -{\" \"}\r\n      {!to ? \" Now\" : <Moment format=\"YYYY/MM/DD\">{moment.utc(to)}</Moment>}\r\n    </p>\r\n    <p>\r\n      <strong>Position: </strong> {title}\r\n    </p>\r\n    <p>\r\n      <strong>Location: </strong> {location}\r\n    </p>\r\n    <p>\r\n      <strong>Description: </strong> {description}\r\n    </p>\r\n  </div>\r\n);\r\n\r\nProfileExperience.propTypes = {\r\n  experience: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ProfileExperience;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Moment from \"react-moment\";\r\nimport moment from \"moment\";\r\n\r\nconst ProfileEducation = ({\r\n  education: { school, degree, fieldofstudy, current, to, from, description },\r\n}) => (\r\n  <div>\r\n    <h3 className=\"text-dark\">{school}</h3>\r\n    <p>\r\n      <Moment format=\"YYYY/MM/DD\">{moment.utc(from)}</Moment> -{\" \"}\r\n      {!to ? \" Now\" : <Moment format=\"YYYY/MM/DD\">{moment.utc(to)}</Moment>}\r\n    </p>\r\n    <p>\r\n      <strong>Degree: </strong> {degree}\r\n    </p>\r\n    <p>\r\n      <strong>Field Of Study: </strong> {fieldofstudy}\r\n    </p>\r\n    <p>\r\n      <strong>Description: </strong> {description}\r\n    </p>\r\n  </div>\r\n);\r\n\r\nProfileEducation.propTypes = {\r\n  education: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ProfileEducation;\r\n","import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport { getGithubRepos } from \"../../actions/profile\";\r\n\r\nconst ProfileGithub = ({ username, getGithubRepos, repos }) => {\r\n  useEffect(() => {\r\n    getGithubRepos(username);\r\n  }, [getGithubRepos, username]);\r\n\r\n  return (\r\n    <div className=\"profile-github\">\r\n      <h2 className=\"text-primary my-1\">Github Repos</h2>\r\n      {repos === null ? (\r\n        <Spinner />\r\n      ) : (\r\n        repos.map((repo) => (\r\n          <div key={repo.id} className=\"repo bg-white p-1 my-1\">\r\n            <div>\r\n              <h4>\r\n                <a\r\n                  href={repo.html_url}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  {repo.name}\r\n                </a>\r\n              </h4>\r\n              <p>{repo.description}</p>\r\n            </div>\r\n            <div>\r\n              <ul>\r\n                <li className=\"badge badge-primary\">\r\n                  Stars: {repo.stargazers_count}\r\n                </li>\r\n                <li className=\"badge badge-dark\">\r\n                  Watchers: {repo.watchers_count}\r\n                </li>\r\n                <li className=\"badge badge-light\">Forks: {repo.forks_count}</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileGithub.propTypes = {\r\n  getGithubRepos: PropTypes.func.isRequired,\r\n  repos: PropTypes.array.isRequired,\r\n  username: PropTypes.string.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  repos: state.profile.repos,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getGithubRepos })(ProfileGithub);\r\n","import React, { Fragment, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport ProfileTop from \"./ProfileTop\";\r\nimport ProfileAbout from \"./ProfileAbout\";\r\nimport ProfileExperience from \"./ProfileExperience\";\r\nimport ProfileEducation from \"./ProfileEducation\";\r\nimport ProfileGithub from \"./ProfileGithub\";\r\nimport { getProfileById } from \"../../actions/profile\";\r\n\r\nconst Profile = ({ getProfileById, profile: { profile }, auth, match }) => {\r\n  /*\r\n   use a nullProfile boolean to safely add to useEffect\r\n   adding profile to useEffect would trigger the function\r\n   as profile is an object and object's are reference types\r\n*/\r\n  const nullProfile = !profile;\r\n  useEffect(() => {\r\n    if (nullProfile) getProfileById(match.params.id);\r\n  }, [getProfileById, match.params.id, nullProfile]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {profile === null ? (\r\n        <Spinner />\r\n      ) : (\r\n        <Fragment>\r\n          <Link to=\"/profiles\" className=\"btn btn-light\">\r\n            Back To Profiles\r\n          </Link>\r\n          {auth.isAuthenticated &&\r\n            auth.loading === false &&\r\n            auth.user._id === profile.user._id && (\r\n              <Link to=\"/edit-profile\" className=\"btn btn-dark\">\r\n                Edit Profile\r\n              </Link>\r\n            )}\r\n          <div className=\"profile-grid my-1\">\r\n            <ProfileTop profile={profile} />\r\n            <ProfileAbout profile={profile} />\r\n            <div className=\"profile-exp bg-white p-2\">\r\n              <h2 className=\"text-primary\">Experience</h2>\r\n              {profile.experience.length > 0 ? (\r\n                <Fragment>\r\n                  {profile.experience.map((experience) => (\r\n                    <ProfileExperience\r\n                      key={experience._id}\r\n                      experience={experience}\r\n                    />\r\n                  ))}\r\n                </Fragment>\r\n              ) : (\r\n                <h4>No experience credentials</h4>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"profile-edu bg-white p-2\">\r\n              <h2 className=\"text-primary\">Education</h2>\r\n              {profile.education.length > 0 ? (\r\n                <Fragment>\r\n                  {profile.education.map((education) => (\r\n                    <ProfileEducation\r\n                      key={education._id}\r\n                      education={education}\r\n                    />\r\n                  ))}\r\n                </Fragment>\r\n              ) : (\r\n                <h4>No education credentials</h4>\r\n              )}\r\n            </div>\r\n\r\n            {profile.githubusername && (\r\n              <ProfileGithub username={profile.githubusername} />\r\n            )}\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  getProfileById: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfileById })(Profile);\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport Moment from 'react-moment';\r\nimport { connect } from 'react-redux';\r\nimport { addLike, removeLike, deletePost } from '../../actions/post'\r\n\r\n\r\nconst PostItem = ({\r\n  addLike,\r\n  removeLike,\r\n  deletePost,\r\n  auth,\r\n  post: { _id, text, name, avatar, user, likes, comments, date },\r\n  showActions,\r\n}) => (\r\n  <div className=\"post bg-white p-1 my-1\">\r\n    <div>\r\n      <Link to={`/profile/${user}`}>\r\n        <img className=\"round-img\" src={avatar} alt=\"\" />\r\n        <h4>{name}</h4>\r\n      </Link>\r\n    </div>\r\n    <div>\r\n      <p className=\"my-1 mytext\" style={{ wordBreak: \"break-all\" }}>\r\n        {text}\r\n      </p>\r\n      <p className=\"post-date\">\r\n        Posted on <Moment format=\"DD/MM/YYYY\">{date}</Moment>\r\n      </p>\r\n\r\n      {showActions && (\r\n        <Fragment>\r\n          <button\r\n            onClick={(e) => addLike(_id)}\r\n            type=\"button\"\r\n            className=\"btn btn-light\"\r\n          >\r\n            <i className=\"fas fa-thumbs-up\"></i>{\" \"}\r\n            <span>{likes.length > 0 && <span>{likes.length}</span>}</span>\r\n          </button>\r\n          <button\r\n            onClick={(e) => removeLike(_id)}\r\n            type=\"button\"\r\n            className=\"btn btn-light\"\r\n          >\r\n            <i className=\"fas fa-thumbs-down\"></i>\r\n          </button>\r\n          <Link to={`/posts/${_id}`} className=\"btn btn-primary\">\r\n            Discussion{\" \"}\r\n            {comments.length > 0 && (\r\n              <span className=\"comment-count\">{comments.length}</span>\r\n            )}\r\n          </Link>\r\n          {!auth.loading && user === auth.user._id && (\r\n            <button\r\n              onClick={(e) => deletePost(_id)}\r\n              type=\"button\"\r\n              className=\"btn btn-danger\"\r\n            >\r\n              <i className=\"fas fa-times\"></i>\r\n            </button>\r\n          )}\r\n        </Fragment>\r\n      )}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nPostItem.defaultProps = {\r\n    showActions: true\r\n};\r\n\r\nPostItem.propTypes = {\r\n    post: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    addLike: PropTypes.func.isRequired,\r\n    removeLike: PropTypes.func.isRequired,\r\n    deletePost: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n})\r\n\r\nexport default connect(mapStateToProps, { addLike, removeLike, deletePost })(PostItem);\r\n","import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport {\r\n    GET_POSTS,\r\n    POST_ERROR,\r\n    UPDATE_LIKES,\r\n    DELETE_POST,\r\n    ADD_POST,\r\n    GET_POST,\r\n    ADD_COMMENT,\r\n    REMOVE_COMMENT\r\n} from './types';\r\n\r\n// Get posts\r\nexport const getPosts = () => async dispatch => {\r\n    try {\r\n        const res = await axios.get('/api/posts');\r\n\r\n        dispatch({\r\n            type: GET_POSTS,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {msg: err.response.statusText, status: err.response.status}\r\n        });\r\n    }\r\n}\r\n\r\n// Add Like\r\nexport const addLike = id => async dispatch => {\r\n    try {\r\n        const res = await axios.put(`/api/posts/like/${id}`);\r\n\r\n        dispatch({\r\n            type: UPDATE_LIKES,\r\n            payload: { id, likes: res.data }\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {msg: err.response.statusText, status: err.response.status}\r\n        });\r\n    }\r\n}\r\n\r\n// Remove Like\r\nexport const removeLike = id => async dispatch => {\r\n    try {\r\n        const res = await axios.put(`/api/posts/unlike/${id}`);\r\n\r\n        dispatch({\r\n            type: UPDATE_LIKES,\r\n            payload: { id, likes: res.data }\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {msg: err.response.statusText, status: err.response.status}\r\n        });\r\n    }\r\n}\r\n\r\n// Delete post\r\nexport const deletePost = id => async dispatch => {\r\n    try {\r\n        await axios.delete(`/api/posts/${id}`);\r\n\r\n        dispatch({\r\n            type: DELETE_POST,\r\n            payload: id\r\n        });\r\n\r\n        dispatch(setAlert('Post Removed', 'success'))\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {msg: err.response.statusText, status: err.response.status}\r\n        });\r\n    }\r\n}\r\n\r\n// Add post\r\nexport const addPost = FormData => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    try {\r\n        const res = await axios.post(`/api/posts`, FormData, config);\r\n\r\n        dispatch({\r\n            type: ADD_POST,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(setAlert('Post Created', 'success'))\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {msg: err.response.statusText, status: err.response.status}\r\n        });\r\n    }\r\n}\r\n\r\n// Get post\r\nexport const getPost = id => async dispatch => {\r\n    try {\r\n        const res = await axios.get(`/api/posts/${id}`);\r\n\r\n        dispatch({\r\n            type: GET_POST,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {msg: err.response.statusText, status: err.response.status}\r\n        });\r\n    }\r\n}\r\n\r\n// Add comment\r\nexport const addComment = (postId, formData) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    try {\r\n        const res = await axios.post(`/api/posts/comment/${postId}`, formData, config);\r\n\r\n        dispatch({\r\n            type: ADD_COMMENT,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(setAlert('Comment added', 'success'))\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {msg: err.response.statusText, status: err.response.status}\r\n        });\r\n    }\r\n}\r\n\r\n// Delete comment\r\nexport const deleteComment = (postId, commentId) => async dispatch => {\r\n    try {\r\n        await axios.delete(`/api/posts/comment/${postId}/${commentId}`);\r\n\r\n        dispatch({\r\n            type: REMOVE_COMMENT,\r\n            payload: commentId\r\n        });\r\n\r\n        dispatch(setAlert('Comment Removed', 'success'))\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {msg: err.response.statusText, status: err.response.status}\r\n        });\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { addPost } from '../../actions/post'\r\n\r\nconst PostForm = ({ addPost }) => {\r\n    const [text, setText] = useState('');\r\n    return (\r\n      <div className=\"post-form\">\r\n        <div className=\"bg-primary p\">\r\n          <h3>Say Something...</h3>\r\n        </div>\r\n        <form className=\"form my-1\" onSubmit={e => {\r\n            e.preventDefault();\r\n            addPost({text});\r\n            setText('');\r\n        }}>\r\n          <textarea\r\n            name=\"text\"\r\n            cols=\"30\"\r\n            rows=\"5\"\r\n            placeholder=\"Create a post\"\r\n            value={text}\r\n            onChange={e=>setText(e.target.value)}\r\n            required\r\n          ></textarea>\r\n          <input type=\"submit\" className=\"btn btn-dark my-1\" value=\"Submit\" />\r\n        </form>\r\n      </div>\r\n    );\r\n}\r\n\r\nPostForm.propTypes = {\r\n    addPost: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default connect( null, { addPost } )(PostForm)\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner'\r\nimport PostItem from './PostItem';\r\nimport { getPosts } from '../../actions/post';\r\nimport PostForm from './PostForm';\r\n\r\nconst Posts = ({getPosts, post:{ posts, loading }}) => {\r\n    useEffect(()=>{\r\n        getPosts();\r\n    },[getPosts])\r\n\r\n    return loading ? (\r\n      <Spinner />\r\n    ) : (\r\n      <Fragment>\r\n        <h1 className=\"large text-primary\">Posts</h1>\r\n        <p className=\"lead\">\r\n          <i className=\"fas fa-user\"></i>{' '}\r\n          Welcome to the community\r\n        </p>\r\n        {/*POST FORM */}\r\n        <PostForm />\r\n        <div className=\"posts\">\r\n          {posts.map((post) => (\r\n            <PostItem key={post._id} post={post} />\r\n          ))}\r\n        </div>\r\n      </Fragment>\r\n    );\r\n}\r\n\r\nPosts.propTypes = {\r\n    getPosts: PropTypes.func.isRequired,\r\n    post: PropTypes.object.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    post: state.post\r\n})\r\n\r\nexport default connect(mapStateToProps, {getPosts})(Posts)\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { addComment } from \"../../actions/post\";\r\n\r\nconst CommentForm = ({ postId, addComment }) => {\r\n  const [text, setText] = useState(\"\");\r\n\r\n  return (\r\n    <div className=\"post-form\">\r\n      <div className=\"bg-primary p\">\r\n        <h3>Leave a Comment</h3>\r\n      </div>\r\n      <form\r\n        className=\"form my-1\"\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          addComment(postId, { text });\r\n          setText(\"\");\r\n        }}\r\n      >\r\n        <textarea\r\n          name=\"text\"\r\n          cols=\"30\"\r\n          rows=\"5\"\r\n          placeholder=\"Create a post\"\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n          required\r\n        />\r\n        <input type=\"submit\" className=\"btn btn-dark my-1\" value=\"Submit\" />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nCommentForm.propTypes = {\r\n  addComment: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addComment })(CommentForm);","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport Moment from 'react-moment'\r\nimport { deleteComment } from '../../actions/post'\r\n\r\nconst CommentItem = ({\r\n  postId,\r\n  comment: { _id, text, name, avatar, user, date },\r\n  auth,\r\n  deleteComment\r\n}) => (\r\n  <div className=\"post bg-white p-1 my-1\">\r\n    <div>\r\n      <Link to={`/profile/${user}`}>\r\n        <img className=\"round-img\" src={avatar} alt=\"\" />\r\n        <h4>{name}</h4>\r\n      </Link>\r\n    </div>\r\n    <div>\r\n      <p className=\"my-1 mytext\" style={{wordBreak:'break-all'}}>{text}</p>\r\n      <p className=\"post-date\">\r\n        Posted on <Moment format=\"DD/MM/YYYY\">{date}</Moment>\r\n      </p>\r\n      {!auth.loading && user === auth.user._id && (\r\n        <button onClick={e=>deleteComment(postId, _id)} type='button' className='btn btn-danger'>\r\n            <i className=\"fas fa-times\"></i>\r\n        </button>\r\n      ) }\r\n    </div>\r\n  </div>\r\n);\r\n\r\nCommentItem.propTypes = {\r\n    postId: PropTypes.string.isRequired,\r\n    comment: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    deleteComment: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state=> ({\r\n    auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps, {deleteComment})(CommentItem)\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport PostItem from '../posts/PostItem';\r\nimport { getPost } from '../../actions/post';\r\nimport { Link } from 'react-router-dom';\r\nimport CommentForm from './CommentForm';\r\nimport CommentItem from './CommentItem';\r\n\r\nconst Post = ({ getPost, post: { post, loading }, match }) => {\r\n    useEffect(()=>{\r\n        getPost(match.params.id);\r\n    }, [getPost, match.params.id])\r\n\r\n  return loading || post === null ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <Link to=\"/posts\" className=\"btn btn-dark\">\r\n        Back To Posts\r\n      </Link>\r\n      <PostItem post={post} showActions={false} />\r\n      <CommentForm postId={post._id} />\r\n      <div className=\"comments\">\r\n        {post.comments.map((comment) => (\r\n          <CommentItem key={comment._id} comment={comment} postId={post._id} />\r\n        ))}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nPost.propTypes = {\r\n    getPost:PropTypes.func.isRequired,\r\n    post:PropTypes.object.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    post: state.post\r\n})\r\n\r\nexport default connect(mapStateToProps, {getPost})(Post)\r\n","import React, { Fragment } from 'react'\r\n\r\nconst NotFound = props => {\r\n    return (\r\n        <Fragment>\r\n            <h1 className=\"x-large text-primary\">\r\n                <i className=\"fas fa-exclamation-triangle\"></i> Page Not Found\r\n            </h1>\r\n            <p>Sorry! This page does not exist</p>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nNotFound.propTypes = {\r\n\r\n}\r\n\r\nexport default NotFound\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  auth: { isAuthenticated, loading },\r\n  ...rest\r\n}) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      !isAuthenticated && !loading ? (\r\n        <Redirect to=\"/login\" />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n})\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React from 'react'\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Register from \"../auth/Register\";\r\nimport Login from \"../auth/Login\";\r\nimport Alert from \"../layout/Alert\";\r\nimport Dashboard from \"../dashboard/Dashboard\";\r\nimport CreateProfile from \"../profile-forms/CreateProfile\";\r\nimport EditProfile from \"../profile-forms/EditProfile\";\r\nimport AddExperience from \"../profile-forms/AddExperience\";\r\nimport AddEducation from \"../profile-forms/AddEducation\";\r\nimport Profiles from \"../profiles/Profiles\";\r\nimport Profile from \"../profile/Profile\";\r\nimport Posts from \"../posts/Posts\";\r\nimport Post from \"../post/Post\";\r\nimport NotFound from \"../layout/NotFound\";\r\nimport PrivateRoute from \"../routing/PrivateRoute\";\r\n\r\nconst Routes = () => {\r\n    return (\r\n      <section className=\"container\">\r\n        <Alert />\r\n        <Switch>\r\n          <Route exact path=\"/register\" component={Register} />\r\n          <Route exact path=\"/login\" component={Login} />{\" \"}\r\n          <Route exact path=\"/profiles\" component={Profiles} />\r\n          <Route exact path=\"/profile/:id\" component={Profile} />\r\n          <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\r\n          <PrivateRoute\r\n            exact\r\n            path=\"/create-profile\"\r\n            component={CreateProfile}\r\n          />\r\n          <PrivateRoute exact path=\"/edit-profile\" component={EditProfile} />\r\n          <PrivateRoute\r\n            exact\r\n            path=\"/add-experience\"\r\n            component={AddExperience}\r\n          />\r\n          <PrivateRoute exact path=\"/add-education\" component={AddEducation} />\r\n          <PrivateRoute exact path=\"/posts\" component={Posts} />\r\n          <PrivateRoute exact path=\"/posts/:id\" component={Post} />\r\n          <Route component={NotFound} />\r\n        </Switch>\r\n      </section>\r\n    );\r\n}\r\n\r\nexport default Routes","import { SET_ALERT, REMOVE_ALERT } from  '../actions/types';\r\n\r\nconst initialState = [];\r\n\r\nexport default function(state= initialState, action){\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n      case SET_ALERT:\r\n        return [...state, payload];\r\n      case REMOVE_ALERT:\r\n        return state.filter(alert => alert.id !== payload);\r\n      default:\r\n        return state;\r\n    }\r\n}","import {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n    ACCOUNT_DELETED\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    token: localStorage.getItem('token'),\r\n    isAuthenticated: null,\r\n    loading: true,\r\n    user: null\r\n}\r\n\r\nexport default function( state= initialState, action ){\r\n    const {type, payload} = action\r\n\r\n    switch(type){\r\n        case USER_LOADED:\r\n            return{\r\n                ...state,\r\n                isAuthenticated: true,\r\n                loading: false,\r\n                user: payload\r\n            }\r\n\r\n        case REGISTER_SUCCESS:\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('token', payload.token);\r\n            return {\r\n                ...state,\r\n                ...payload,\r\n                isAuthenticated: true,\r\n                loading: false\r\n            }\r\n\r\n        case REGISTER_FAIL:\r\n        case AUTH_ERROR:\r\n        case LOGIN_FAIL:\r\n        case LOGOUT:\r\n        case ACCOUNT_DELETED:\r\n            localStorage.removeItem('token');\r\n            return{\r\n                ...state,\r\n                token: null,\r\n                isAuthenticated: false,\r\n                loading: false\r\n            }\r\n        default:\r\n        return state\r\n    }\r\n}","import {\r\n  GET_PROFILE,\r\n  PROFILE_ERROR,\r\n  CLEAR_PROFILE,\r\n  UPDATE_PROFILE,\r\n  GET_PROFILES,\r\n  GET_REPOS,\r\n  NO_REPOS,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  profile: null,\r\n  profiles: [],\r\n  repos: [],\r\n  loading: true,\r\n  error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case GET_PROFILE:\r\n    case UPDATE_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: payload,\r\n        loading: false,\r\n      };\r\n    case GET_PROFILES:\r\n      return {\r\n        ...state,\r\n        profiles: payload,\r\n        loading: false,\r\n      };\r\n    case PROFILE_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false,\r\n        profile: null,\r\n      };\r\n    case CLEAR_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: null,\r\n        repos: [],\r\n      };\r\n    case GET_REPOS:\r\n      return {\r\n        ...state,\r\n        repos: payload,\r\n        loading: false,\r\n      };\r\n    case NO_REPOS:\r\n      return {\r\n        ...state,\r\n        repos: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n    GET_POSTS,\r\n    POST_ERROR,\r\n    UPDATE_LIKES,\r\n    DELETE_POST,\r\n    ADD_POST,\r\n    GET_POST,\r\n    ADD_COMMENT,\r\n    REMOVE_COMMENT\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    posts:[],\r\n    post: null,\r\n    loading: true,\r\n    error: {}\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n      case GET_POSTS:\r\n        return {\r\n          ...state,\r\n          posts: payload,\r\n          loading: false,\r\n        };\r\n      case GET_POST:\r\n        return {\r\n          ...state,\r\n          post: payload,\r\n          loading: false,\r\n        };\r\n      case ADD_POST:\r\n        return {\r\n          ...state,\r\n          posts: [payload, ...state.posts],\r\n          loading: false,\r\n        };\r\n      case DELETE_POST:\r\n        return {\r\n          ...state,\r\n          posts: state.posts.filter((post) => post._id !== payload),\r\n          loading: false,\r\n        };\r\n      case POST_ERROR:\r\n        return {\r\n          ...state,\r\n          error: payload,\r\n          loading: false,\r\n        };\r\n      case UPDATE_LIKES:\r\n        return {\r\n          ...state,\r\n          posts: state.posts.map((post) =>\r\n            post._id === payload.id ? { ...post, likes: payload.likes } : post\r\n          ),\r\n          loading: false,\r\n        };\r\n      case ADD_COMMENT:\r\n        return {\r\n          ...state,\r\n          post: { ...state.post, comments: payload },\r\n          loading: false,\r\n        };\r\n      case REMOVE_COMMENT:\r\n        return {\r\n          ...state,\r\n          post: {\r\n            ...state.post,\r\n            comments: state.post.comments.filter(\r\n              (comment) => comment._id !== payload\r\n            ),\r\n          },\r\n          loading: false,\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport alert from './alert';\r\nimport auth from \"./auth\";\r\nimport profile from \"./profile\";\r\nimport post from \"./post\";\r\n\r\nexport default combineReducers({\r\n    alert,\r\n    auth,\r\n    profile,\r\n    post\r\n});","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Navbar from './components/layout/Navbar';\r\nimport Landing from './components/layout/Landing';\r\nimport Routes from './components/routing/Routes';\r\nimport './App.css';\r\n// Redux\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\nimport { loadUser } from './actions/auth';\r\nimport setAuthToken from './utils/setAuthToken';\r\n\r\nif (localStorage.token) {\r\n  setAuthToken(localStorage.token);\r\n}\r\n\r\nconst App = () => {\r\n  useEffect(()=>{\r\n    store.dispatch(loadUser());\r\n  },[]);\r\n  return (\r\n    <Provider store={store}>\r\n      <Router>\r\n        <Fragment>\r\n          <Navbar />\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Landing} />\r\n            <Route component={Routes} />\r\n          </Switch>\r\n        </Fragment>\r\n      </Router>\r\n    </Provider>\r\n  );\r\n};\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}